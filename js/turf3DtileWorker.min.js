!function(f){if("object"==typeof exports&&"undefined"!=typeof module)module.exports=f();else if("function"==typeof define&&define.amd)define([],f);else{("undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:this).turf=f()}}(function(){return function(){return function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){return o(e[i][1][r]||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}}()({1:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var meta_1=require("@turf/meta"),RADIUS=6378137;function polygonArea(coords){var total=0;if(coords&&coords.length>0){total+=Math.abs(ringArea(coords[0]));for(var i=1;i<coords.length;i++)total-=Math.abs(ringArea(coords[i]))}return total}function ringArea(coords){var p1,p2,lowerIndex,middleIndex,upperIndex,i,total=0,coordsLength=coords.length;if(coordsLength>2){for(i=0;i<coordsLength;i++)i===coordsLength-2?(lowerIndex=coordsLength-2,middleIndex=coordsLength-1,upperIndex=0):i===coordsLength-1?(lowerIndex=coordsLength-1,middleIndex=0,upperIndex=1):(lowerIndex=i,middleIndex=i+1,upperIndex=i+2),p1=coords[lowerIndex],p2=coords[middleIndex],total+=(rad(coords[upperIndex][0])-rad(p1[0]))*Math.sin(rad(p2[1]));total=total*RADIUS*RADIUS/2}return total}function rad(num){return num*Math.PI/180}exports.default=function(geojson){return meta_1.geomReduce(geojson,function(value,geom){return value+function(geom){var i,total=0;switch(geom.type){case"Polygon":return polygonArea(geom.coordinates);case"MultiPolygon":for(i=0;i<geom.coordinates.length;i++)total+=polygonArea(geom.coordinates[i]);return total;case"Point":case"MultiPoint":case"LineString":case"MultiLineString":return 0}return 0}(geom)},0)}},{"@turf/meta":34}],2:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var meta_1=require("@turf/meta");exports.default=function(geojson){var result=[1/0,1/0,-1/0,-1/0];return meta_1.coordEach(geojson,function(coord){result[0]>coord[0]&&(result[0]=coord[0]),result[1]>coord[1]&&(result[1]=coord[1]),result[2]<coord[0]&&(result[2]=coord[0]),result[3]<coord[1]&&(result[3]=coord[1])}),result}},{"@turf/meta":34}],3:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var helpers_1=require("@turf/helpers"),invariant_1=require("@turf/invariant");function bearing(start,end,options){if(void 0===options&&(options={}),!0===options.final)return function(start,end){var bear=bearing(end,start);return bear=(bear+180)%360}(start,end);var coordinates1=invariant_1.getCoord(start),coordinates2=invariant_1.getCoord(end),lon1=helpers_1.degreesToRadians(coordinates1[0]),lon2=helpers_1.degreesToRadians(coordinates2[0]),lat1=helpers_1.degreesToRadians(coordinates1[1]),lat2=helpers_1.degreesToRadians(coordinates2[1]),a=Math.sin(lon2-lon1)*Math.cos(lat2),b=Math.cos(lat1)*Math.sin(lat2)-Math.sin(lat1)*Math.cos(lat2)*Math.cos(lon2-lon1);return helpers_1.radiansToDegrees(Math.atan2(a,b))}exports.default=bearing},{"@turf/helpers":23,"@turf/invariant":24}],4:[function(require,module,exports){"use strict";var __importDefault=this&&this.__importDefault||function(mod){return mod&&mod.__esModule?mod:{default:mod}};Object.defineProperty(exports,"__esModule",{value:!0});var bbox_1=__importDefault(require("@turf/bbox")),boolean_point_in_polygon_1=__importDefault(require("@turf/boolean-point-in-polygon")),boolean_point_on_line_1=__importDefault(require("@turf/boolean-point-on-line")),invariant_1=require("@turf/invariant");function isPointInMultiPoint(multiPoint,pt){var i,output=!1;for(i=0;i<multiPoint.coordinates.length;i++)if(compareCoords(multiPoint.coordinates[i],pt.coordinates)){output=!0;break}return output}function isMultiPointInMultiPoint(multiPoint1,multiPoint2){for(var _i=0,_a=multiPoint2.coordinates;_i<_a.length;_i++){for(var coord2=_a[_i],matchFound=!1,_b=0,_c=multiPoint1.coordinates;_b<_c.length;_b++){if(compareCoords(coord2,_c[_b])){matchFound=!0;break}}if(!matchFound)return!1}return!0}function isMultiPointOnLine(lineString,multiPoint){for(var haveFoundInteriorPoint=!1,_i=0,_a=multiPoint.coordinates;_i<_a.length;_i++){var coord=_a[_i];if(boolean_point_on_line_1.default(coord,lineString,{ignoreEndVertices:!0})&&(haveFoundInteriorPoint=!0),!boolean_point_on_line_1.default(coord,lineString))return!1}return!!haveFoundInteriorPoint}function isMultiPointInPoly(polygon,multiPoint){for(var _i=0,_a=multiPoint.coordinates;_i<_a.length;_i++){var coord=_a[_i];if(!boolean_point_in_polygon_1.default(coord,polygon,{ignoreBoundary:!0}))return!1}return!0}function isLineOnLine(lineString1,lineString2){for(var haveFoundInteriorPoint=!1,_i=0,_a=lineString2.coordinates;_i<_a.length;_i++){var coords=_a[_i];if(boolean_point_on_line_1.default({type:"Point",coordinates:coords},lineString1,{ignoreEndVertices:!0})&&(haveFoundInteriorPoint=!0),!boolean_point_on_line_1.default({type:"Point",coordinates:coords},lineString1,{ignoreEndVertices:!1}))return!1}return haveFoundInteriorPoint}function isLineInPoly(polygon,linestring){var output=!1,i=0;if(!doBBoxOverlap(bbox_1.default(polygon),bbox_1.default(linestring)))return!1;for(;i<linestring.coordinates.length-1;i++){var midPoint=getMidpoint(linestring.coordinates[i],linestring.coordinates[i+1]);if(boolean_point_in_polygon_1.default({type:"Point",coordinates:midPoint},polygon,{ignoreBoundary:!0})){output=!0;break}}return output}function isPolyInPoly(feature1,feature2){if("Feature"===feature1.type&&null===feature1.geometry)return!1;if("Feature"===feature2.type&&null===feature2.geometry)return!1;if(!doBBoxOverlap(bbox_1.default(feature1),bbox_1.default(feature2)))return!1;for(var _i=0,coords_1=invariant_1.getGeom(feature2).coordinates;_i<coords_1.length;_i++)for(var _a=0,ring_1=coords_1[_i];_a<ring_1.length;_a++){var coord=ring_1[_a];if(!boolean_point_in_polygon_1.default(coord,feature1))return!1}return!0}function doBBoxOverlap(bbox1,bbox2){return!(bbox1[0]>bbox2[0])&&(!(bbox1[2]<bbox2[2])&&(!(bbox1[1]>bbox2[1])&&!(bbox1[3]<bbox2[3])))}function compareCoords(pair1,pair2){return pair1[0]===pair2[0]&&pair1[1]===pair2[1]}function getMidpoint(pair1,pair2){return[(pair1[0]+pair2[0])/2,(pair1[1]+pair2[1])/2]}exports.default=function(feature1,feature2){var geom1=invariant_1.getGeom(feature1),geom2=invariant_1.getGeom(feature2),type1=invariant_1.getType(feature1),type2=invariant_1.getType(feature2),coords1=invariant_1.getCoords(feature1),coords2=invariant_1.getCoords(feature2);switch(type1){case"Point":switch(type2){case"Point":return compareCoords(coords1,coords2);default:throw new Error("feature2 "+type2+" geometry not supported")}case"MultiPoint":switch(type2){case"Point":return isPointInMultiPoint(geom1,geom2);case"MultiPoint":return isMultiPointInMultiPoint(geom1,geom2);default:throw new Error("feature2 "+type2+" geometry not supported")}case"LineString":switch(type2){case"Point":return boolean_point_on_line_1.default(geom2,geom1,{ignoreEndVertices:!0});case"LineString":return isLineOnLine(geom1,geom2);case"MultiPoint":return isMultiPointOnLine(geom1,geom2);default:throw new Error("feature2 "+type2+" geometry not supported")}case"Polygon":switch(type2){case"Point":return boolean_point_in_polygon_1.default(geom2,geom1,{ignoreBoundary:!0});case"LineString":return isLineInPoly(geom1,geom2);case"Polygon":return isPolyInPoly(geom1,geom2);case"MultiPoint":return isMultiPointInPoly(geom1,geom2);default:throw new Error("feature2 "+type2+" geometry not supported")}default:throw new Error("feature1 "+type1+" geometry not supported")}},exports.isPointInMultiPoint=isPointInMultiPoint,exports.isMultiPointInMultiPoint=isMultiPointInMultiPoint,exports.isMultiPointOnLine=isMultiPointOnLine,exports.isMultiPointInPoly=isMultiPointInPoly,exports.isLineOnLine=isLineOnLine,exports.isLineInPoly=isLineInPoly,exports.isPolyInPoly=isPolyInPoly,exports.doBBoxOverlap=doBBoxOverlap,exports.compareCoords=compareCoords,exports.getMidpoint=getMidpoint},{"@turf/bbox":2,"@turf/boolean-point-in-polygon":6,"@turf/boolean-point-on-line":7,"@turf/invariant":24}],5:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var meta_1=require("@turf/meta"),invariant_1=require("@turf/invariant"),line_overlap_1=require("@turf/line-overlap"),line_intersect_1=require("@turf/line-intersect"),GeojsonEquality=require("geojson-equality");exports.default=function(feature1,feature2){if(!feature1)throw new Error("feature1 is required");if(!feature2)throw new Error("feature2 is required");var type1=invariant_1.getType(feature1);if(type1!==invariant_1.getType(feature2))throw new Error("features must be of the same type");if("Point"===type1)throw new Error("Point geometry not supported");if(new GeojsonEquality({precision:6}).compare(feature1,feature2))return!1;var overlap=0;switch(type1){case"MultiPoint":var coords1=meta_1.coordAll(feature1),coords2=meta_1.coordAll(feature2);coords1.forEach(function(coord1){coords2.forEach(function(coord2){coord1[0]===coord2[0]&&coord1[1]===coord2[1]&&overlap++})});break;case"LineString":case"MultiLineString":meta_1.segmentEach(feature1,function(segment1){meta_1.segmentEach(feature2,function(segment2){line_overlap_1.default(segment1,segment2).features.length&&overlap++})});break;case"Polygon":case"MultiPolygon":meta_1.segmentEach(feature1,function(segment1){meta_1.segmentEach(feature2,function(segment2){line_intersect_1.default(segment1,segment2).features.length&&overlap++})})}return overlap>0}},{"@turf/invariant":24,"@turf/line-intersect":30,"@turf/line-overlap":31,"@turf/meta":34,"geojson-equality":68}],6:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var invariant_1=require("@turf/invariant");function inRing(pt,ring,ignoreBoundary){var isInside=!1;ring[0][0]===ring[ring.length-1][0]&&ring[0][1]===ring[ring.length-1][1]&&(ring=ring.slice(0,ring.length-1));for(var i=0,j=ring.length-1;i<ring.length;j=i++){var xi=ring[i][0],yi=ring[i][1],xj=ring[j][0],yj=ring[j][1];if(pt[1]*(xi-xj)+yi*(xj-pt[0])+yj*(pt[0]-xi)==0&&(xi-pt[0])*(xj-pt[0])<=0&&(yi-pt[1])*(yj-pt[1])<=0)return!ignoreBoundary;yi>pt[1]!=yj>pt[1]&&pt[0]<(xj-xi)*(pt[1]-yi)/(yj-yi)+xi&&(isInside=!isInside)}return isInside}exports.default=function(point,polygon,options){if(void 0===options&&(options={}),!point)throw new Error("point is required");if(!polygon)throw new Error("polygon is required");var pt=invariant_1.getCoord(point),geom=invariant_1.getGeom(polygon),type=geom.type,bbox=polygon.bbox,polys=geom.coordinates;if(bbox&&!1===function(pt,bbox){return bbox[0]<=pt[0]&&bbox[1]<=pt[1]&&bbox[2]>=pt[0]&&bbox[3]>=pt[1]}(pt,bbox))return!1;"Polygon"===type&&(polys=[polys]);for(var insidePoly=!1,i=0;i<polys.length&&!insidePoly;i++)if(inRing(pt,polys[i][0],options.ignoreBoundary)){for(var inHole=!1,k=1;k<polys[i].length&&!inHole;)inRing(pt,polys[i][k],!options.ignoreBoundary)&&(inHole=!0),k++;inHole||(insidePoly=!0)}return insidePoly}},{"@turf/invariant":24}],7:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var invariant_1=require("@turf/invariant");function isPointOnLineSegment(lineSegmentStart,lineSegmentEnd,pt,excludeBoundary){var x=pt[0],y=pt[1],x1=lineSegmentStart[0],y1=lineSegmentStart[1],x2=lineSegmentEnd[0],y2=lineSegmentEnd[1],dxl=x2-x1,dyl=y2-y1;return 0==(pt[0]-x1)*dyl-(pt[1]-y1)*dxl&&(excludeBoundary?"start"===excludeBoundary?Math.abs(dxl)>=Math.abs(dyl)?dxl>0?x1<x&&x<=x2:x2<=x&&x<x1:dyl>0?y1<y&&y<=y2:y2<=y&&y<y1:"end"===excludeBoundary?Math.abs(dxl)>=Math.abs(dyl)?dxl>0?x1<=x&&x<x2:x2<x&&x<=x1:dyl>0?y1<=y&&y<y2:y2<y&&y<=y1:"both"===excludeBoundary&&(Math.abs(dxl)>=Math.abs(dyl)?dxl>0?x1<x&&x<x2:x2<x&&x<x1:dyl>0?y1<y&&y<y2:y2<y&&y<y1):Math.abs(dxl)>=Math.abs(dyl)?dxl>0?x1<=x&&x<=x2:x2<=x&&x<=x1:dyl>0?y1<=y&&y<=y2:y2<=y&&y<=y1)}exports.default=function(pt,line,options){void 0===options&&(options={});for(var ptCoords=invariant_1.getCoord(pt),lineCoords=invariant_1.getCoords(line),i=0;i<lineCoords.length-1;i++){var ignoreBoundary=!1;if(options.ignoreEndVertices&&(0===i&&(ignoreBoundary="start"),i===lineCoords.length-2&&(ignoreBoundary="end"),0===i&&i+1===lineCoords.length-1&&(ignoreBoundary="both")),isPointOnLineSegment(lineCoords[i],lineCoords[i+1],ptCoords,ignoreBoundary))return!0}return!1}},{"@turf/invariant":24}],8:[function(require,module,exports){"use strict";var ex,bbox=(ex=require("@turf/bbox"))&&"object"==typeof ex&&"default"in ex?ex.default:ex,helpers=require("@turf/helpers");function center(geojson,options){if(options=options||{},!helpers.isObject(options))throw new Error("options is invalid");var properties=options.properties;if(!geojson)throw new Error("geojson is required");var ext=bbox(geojson),x=(ext[0]+ext[2])/2,y=(ext[1]+ext[3])/2;return helpers.point([x,y],properties)}module.exports=center,module.exports.default=center},{"@turf/bbox":9,"@turf/helpers":10}],9:[function(require,module,exports){"use strict";var meta=require("@turf/meta");function bbox(geojson){var BBox=[1/0,1/0,-1/0,-1/0];return meta.coordEach(geojson,function(coord){BBox[0]>coord[0]&&(BBox[0]=coord[0]),BBox[1]>coord[1]&&(BBox[1]=coord[1]),BBox[2]<coord[0]&&(BBox[2]=coord[0]),BBox[3]<coord[1]&&(BBox[3]=coord[1])}),BBox}module.exports=bbox,module.exports.default=bbox},{"@turf/meta":11}],10:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var factors={meters:6371008.8,metres:6371008.8,millimeters:6371008800,millimetres:6371008800,centimeters:637100880,centimetres:637100880,kilometers:6371.0088,kilometres:6371.0088,miles:3958.761333810546,nauticalmiles:6371008.8/1852,inches:6371008.8*39.37,yards:6371008.8/1.0936,feet:20902260.511392,radians:1,degrees:6371008.8/111325},unitsFactors={meters:1,metres:1,millimeters:1e3,millimetres:1e3,centimeters:100,centimetres:100,kilometers:.001,kilometres:.001,miles:1/1609.344,nauticalmiles:1/1852,inches:39.37,yards:1/1.0936,feet:3.28084,radians:1/6371008.8,degrees:1/111325},areaFactors={meters:1,metres:1,millimeters:1e6,millimetres:1e6,centimeters:1e4,centimetres:1e4,kilometers:1e-6,kilometres:1e-6,acres:247105e-9,miles:3.86e-7,yards:1.195990046,feet:10.763910417,inches:1550.003100006};function feature(geometry,properties,options){if(!isObject(options=options||{}))throw new Error("options is invalid");var bbox=options.bbox,id=options.id;if(void 0===geometry)throw new Error("geometry is required");if(properties&&properties.constructor!==Object)throw new Error("properties must be an Object");bbox&&validateBBox(bbox),id&&validateId(id);var feat={type:"Feature"};return id&&(feat.id=id),bbox&&(feat.bbox=bbox),feat.properties=properties||{},feat.geometry=geometry,feat}function point(coordinates,properties,options){if(!coordinates)throw new Error("coordinates is required");if(!Array.isArray(coordinates))throw new Error("coordinates must be an Array");if(coordinates.length<2)throw new Error("coordinates must be at least 2 numbers long");if(!isNumber(coordinates[0])||!isNumber(coordinates[1]))throw new Error("coordinates must contain numbers");return feature({type:"Point",coordinates:coordinates},properties,options)}function polygon(coordinates,properties,options){if(!coordinates)throw new Error("coordinates is required");for(var i=0;i<coordinates.length;i++){var ring=coordinates[i];if(ring.length<4)throw new Error("Each LinearRing of a Polygon must have 4 or more Positions.");for(var j=0;j<ring[ring.length-1].length;j++){if(0===i&&0===j&&!isNumber(ring[0][0])||!isNumber(ring[0][1]))throw new Error("coordinates must contain numbers");if(ring[ring.length-1][j]!==ring[0][j])throw new Error("First and last Position are not equivalent.")}}return feature({type:"Polygon",coordinates:coordinates},properties,options)}function lineString(coordinates,properties,options){if(!coordinates)throw new Error("coordinates is required");if(coordinates.length<2)throw new Error("coordinates must be an array of two or more positions");if(!isNumber(coordinates[0][1])||!isNumber(coordinates[0][1]))throw new Error("coordinates must contain numbers");return feature({type:"LineString",coordinates:coordinates},properties,options)}function featureCollection(features,options){if(!isObject(options=options||{}))throw new Error("options is invalid");var bbox=options.bbox,id=options.id;if(!features)throw new Error("No features passed");if(!Array.isArray(features))throw new Error("features must be an Array");bbox&&validateBBox(bbox),id&&validateId(id);var fc={type:"FeatureCollection"};return id&&(fc.id=id),bbox&&(fc.bbox=bbox),fc.features=features,fc}function multiLineString(coordinates,properties,options){if(!coordinates)throw new Error("coordinates is required");return feature({type:"MultiLineString",coordinates:coordinates},properties,options)}function multiPoint(coordinates,properties,options){if(!coordinates)throw new Error("coordinates is required");return feature({type:"MultiPoint",coordinates:coordinates},properties,options)}function multiPolygon(coordinates,properties,options){if(!coordinates)throw new Error("coordinates is required");return feature({type:"MultiPolygon",coordinates:coordinates},properties,options)}function radiansToLength(radians,units){if(void 0===radians||null===radians)throw new Error("radians is required");if(units&&"string"!=typeof units)throw new Error("units must be a string");var factor=factors[units||"kilometers"];if(!factor)throw new Error(units+" units is invalid");return radians*factor}function lengthToRadians(distance,units){if(void 0===distance||null===distance)throw new Error("distance is required");if(units&&"string"!=typeof units)throw new Error("units must be a string");var factor=factors[units||"kilometers"];if(!factor)throw new Error(units+" units is invalid");return distance/factor}function radiansToDegrees(radians){if(null===radians||void 0===radians)throw new Error("radians is required");return 180*(radians%(2*Math.PI))/Math.PI}function isNumber(num){return!isNaN(num)&&null!==num&&!Array.isArray(num)}function isObject(input){return!!input&&input.constructor===Object}function validateBBox(bbox){if(!bbox)throw new Error("bbox is required");if(!Array.isArray(bbox))throw new Error("bbox must be an Array");if(4!==bbox.length&&6!==bbox.length)throw new Error("bbox must be an Array of 4 or 6 numbers");bbox.forEach(function(num){if(!isNumber(num))throw new Error("bbox must only contain numbers")})}function validateId(id){if(!id)throw new Error("id is required");if(-1===["string","number"].indexOf(typeof id))throw new Error("id must be a number or a string")}exports.earthRadius=6371008.8,exports.factors=factors,exports.unitsFactors=unitsFactors,exports.areaFactors=areaFactors,exports.feature=feature,exports.geometry=function(type,coordinates,options){if(!isObject(options=options||{}))throw new Error("options is invalid");var geom,bbox=options.bbox;if(!type)throw new Error("type is required");if(!coordinates)throw new Error("coordinates is required");if(!Array.isArray(coordinates))throw new Error("coordinates must be an Array");switch(bbox&&validateBBox(bbox),type){case"Point":geom=point(coordinates).geometry;break;case"LineString":geom=lineString(coordinates).geometry;break;case"Polygon":geom=polygon(coordinates).geometry;break;case"MultiPoint":geom=multiPoint(coordinates).geometry;break;case"MultiLineString":geom=multiLineString(coordinates).geometry;break;case"MultiPolygon":geom=multiPolygon(coordinates).geometry;break;default:throw new Error(type+" is invalid")}return bbox&&(geom.bbox=bbox),geom},exports.point=point,exports.points=function(coordinates,properties,options){if(!coordinates)throw new Error("coordinates is required");if(!Array.isArray(coordinates))throw new Error("coordinates must be an Array");return featureCollection(coordinates.map(function(coords){return point(coords,properties)}),options)},exports.polygon=polygon,exports.polygons=function(coordinates,properties,options){if(!coordinates)throw new Error("coordinates is required");if(!Array.isArray(coordinates))throw new Error("coordinates must be an Array");return featureCollection(coordinates.map(function(coords){return polygon(coords,properties)}),options)},exports.lineString=lineString,exports.lineStrings=function(coordinates,properties,options){if(!coordinates)throw new Error("coordinates is required");if(!Array.isArray(coordinates))throw new Error("coordinates must be an Array");return featureCollection(coordinates.map(function(coords){return lineString(coords,properties)}),options)},exports.featureCollection=featureCollection,exports.multiLineString=multiLineString,exports.multiPoint=multiPoint,exports.multiPolygon=multiPolygon,exports.geometryCollection=function(geometries,properties,options){if(!geometries)throw new Error("geometries is required");if(!Array.isArray(geometries))throw new Error("geometries must be an Array");return feature({type:"GeometryCollection",geometries:geometries},properties,options)},exports.round=function(num,precision){if(void 0===num||null===num||isNaN(num))throw new Error("num is required");if(precision&&!(precision>=0))throw new Error("precision must be a positive number");var multiplier=Math.pow(10,precision||0);return Math.round(num*multiplier)/multiplier},exports.radiansToLength=radiansToLength,exports.lengthToRadians=lengthToRadians,exports.lengthToDegrees=function(distance,units){return radiansToDegrees(lengthToRadians(distance,units))},exports.bearingToAzimuth=function(bearing){if(null===bearing||void 0===bearing)throw new Error("bearing is required");var angle=bearing%360;return angle<0&&(angle+=360),angle},exports.radiansToDegrees=radiansToDegrees,exports.degreesToRadians=function(degrees){if(null===degrees||void 0===degrees)throw new Error("degrees is required");return degrees%360*Math.PI/180},exports.convertLength=function(length,originalUnit,finalUnit){if(null===length||void 0===length)throw new Error("length is required");if(!(length>=0))throw new Error("length must be a positive number");return radiansToLength(lengthToRadians(length,originalUnit),finalUnit||"kilometers")},exports.convertArea=function(area,originalUnit,finalUnit){if(null===area||void 0===area)throw new Error("area is required");if(!(area>=0))throw new Error("area must be a positive number");var startFactor=areaFactors[originalUnit||"meters"];if(!startFactor)throw new Error("invalid original units");var finalFactor=areaFactors[finalUnit||"kilometers"];if(!finalFactor)throw new Error("invalid final units");return area/startFactor*finalFactor},exports.isNumber=isNumber,exports.isObject=isObject,exports.validateBBox=validateBBox,exports.validateId=validateId,exports.radians2degrees=function(){throw new Error("method has been renamed to `radiansToDegrees`")},exports.degrees2radians=function(){throw new Error("method has been renamed to `degreesToRadians`")},exports.distanceToDegrees=function(){throw new Error("method has been renamed to `lengthToDegrees`")},exports.distanceToRadians=function(){throw new Error("method has been renamed to `lengthToRadians`")},exports.radiansToDistance=function(){throw new Error("method has been renamed to `radiansToLength`")},exports.bearingToAngle=function(){throw new Error("method has been renamed to `bearingToAzimuth`")},exports.convertDistance=function(){throw new Error("method has been renamed to `convertLength`")}},{}],11:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var helpers=require("@turf/helpers");function coordEach(geojson,callback,excludeWrapCoord){if(null!==geojson)for(var j,k,l,geometry,stopG,coords,geometryMaybeCollection,isGeometryCollection,wrapShrink=0,coordIndex=0,type=geojson.type,isFeatureCollection="FeatureCollection"===type,isFeature="Feature"===type,stop=isFeatureCollection?geojson.features.length:1,featureIndex=0;featureIndex<stop;featureIndex++){stopG=(isGeometryCollection=!!(geometryMaybeCollection=isFeatureCollection?geojson.features[featureIndex].geometry:isFeature?geojson.geometry:geojson)&&"GeometryCollection"===geometryMaybeCollection.type)?geometryMaybeCollection.geometries.length:1;for(var geomIndex=0;geomIndex<stopG;geomIndex++){var multiFeatureIndex=0,geometryIndex=0;if(null!==(geometry=isGeometryCollection?geometryMaybeCollection.geometries[geomIndex]:geometryMaybeCollection)){coords=geometry.coordinates;var geomType=geometry.type;switch(wrapShrink=!excludeWrapCoord||"Polygon"!==geomType&&"MultiPolygon"!==geomType?0:1,geomType){case null:break;case"Point":if(!1===callback(coords,coordIndex,featureIndex,multiFeatureIndex,geometryIndex))return!1;coordIndex++,multiFeatureIndex++;break;case"LineString":case"MultiPoint":for(j=0;j<coords.length;j++){if(!1===callback(coords[j],coordIndex,featureIndex,multiFeatureIndex,geometryIndex))return!1;coordIndex++,"MultiPoint"===geomType&&multiFeatureIndex++}"LineString"===geomType&&multiFeatureIndex++;break;case"Polygon":case"MultiLineString":for(j=0;j<coords.length;j++){for(k=0;k<coords[j].length-wrapShrink;k++){if(!1===callback(coords[j][k],coordIndex,featureIndex,multiFeatureIndex,geometryIndex))return!1;coordIndex++}"MultiLineString"===geomType&&multiFeatureIndex++,"Polygon"===geomType&&geometryIndex++}"Polygon"===geomType&&multiFeatureIndex++;break;case"MultiPolygon":for(j=0;j<coords.length;j++){for("MultiPolygon"===geomType&&(geometryIndex=0),k=0;k<coords[j].length;k++){for(l=0;l<coords[j][k].length-wrapShrink;l++){if(!1===callback(coords[j][k][l],coordIndex,featureIndex,multiFeatureIndex,geometryIndex))return!1;coordIndex++}geometryIndex++}multiFeatureIndex++}break;case"GeometryCollection":for(j=0;j<geometry.geometries.length;j++)if(!1===coordEach(geometry.geometries[j],callback,excludeWrapCoord))return!1;break;default:throw new Error("Unknown Geometry Type")}}}}}function propEach(geojson,callback){var i;switch(geojson.type){case"FeatureCollection":for(i=0;i<geojson.features.length&&!1!==callback(geojson.features[i].properties,i);i++);break;case"Feature":callback(geojson.properties,0)}}function featureEach(geojson,callback){if("Feature"===geojson.type)callback(geojson,0);else if("FeatureCollection"===geojson.type)for(var i=0;i<geojson.features.length&&!1!==callback(geojson.features[i],i);i++);}function geomEach(geojson,callback){var i,j,g,geometry,stopG,geometryMaybeCollection,isGeometryCollection,featureProperties,featureBBox,featureId,featureIndex=0,isFeatureCollection="FeatureCollection"===geojson.type,isFeature="Feature"===geojson.type,stop=isFeatureCollection?geojson.features.length:1;for(i=0;i<stop;i++){for(geometryMaybeCollection=isFeatureCollection?geojson.features[i].geometry:isFeature?geojson.geometry:geojson,featureProperties=isFeatureCollection?geojson.features[i].properties:isFeature?geojson.properties:{},featureBBox=isFeatureCollection?geojson.features[i].bbox:isFeature?geojson.bbox:void 0,featureId=isFeatureCollection?geojson.features[i].id:isFeature?geojson.id:void 0,stopG=(isGeometryCollection=!!geometryMaybeCollection&&"GeometryCollection"===geometryMaybeCollection.type)?geometryMaybeCollection.geometries.length:1,g=0;g<stopG;g++)if(null!==(geometry=isGeometryCollection?geometryMaybeCollection.geometries[g]:geometryMaybeCollection))switch(geometry.type){case"Point":case"LineString":case"MultiPoint":case"Polygon":case"MultiLineString":case"MultiPolygon":if(!1===callback(geometry,featureIndex,featureProperties,featureBBox,featureId))return!1;break;case"GeometryCollection":for(j=0;j<geometry.geometries.length;j++)if(!1===callback(geometry.geometries[j],featureIndex,featureProperties,featureBBox,featureId))return!1;break;default:throw new Error("Unknown Geometry Type")}else if(!1===callback(null,featureIndex,featureProperties,featureBBox,featureId))return!1;featureIndex++}}function flattenEach(geojson,callback){geomEach(geojson,function(geometry,featureIndex,properties,bbox,id){var geomType,type=null===geometry?null:geometry.type;switch(type){case null:case"Point":case"LineString":case"Polygon":return!1!==callback(helpers.feature(geometry,properties,{bbox:bbox,id:id}),featureIndex,0)&&void 0}switch(type){case"MultiPoint":geomType="Point";break;case"MultiLineString":geomType="LineString";break;case"MultiPolygon":geomType="Polygon"}for(var multiFeatureIndex=0;multiFeatureIndex<geometry.coordinates.length;multiFeatureIndex++){var geom={type:geomType,coordinates:geometry.coordinates[multiFeatureIndex]};if(!1===callback(helpers.feature(geom,properties),featureIndex,multiFeatureIndex))return!1}})}function segmentEach(geojson,callback){flattenEach(geojson,function(feature$$1,featureIndex,multiFeatureIndex){var segmentIndex=0;if(feature$$1.geometry){var previousCoords,type=feature$$1.geometry.type;if("Point"!==type&&"MultiPoint"!==type)return!1!==coordEach(feature$$1,function(currentCoord,coordIndex,featureIndexCoord,mutliPartIndexCoord,geometryIndex){if(void 0!==previousCoords){var currentSegment=helpers.lineString([previousCoords,currentCoord],feature$$1.properties);if(!1===callback(currentSegment,featureIndex,multiFeatureIndex,geometryIndex,segmentIndex))return!1;segmentIndex++,previousCoords=currentCoord}else previousCoords=currentCoord})&&void 0}})}function lineEach(geojson,callback){if(!geojson)throw new Error("geojson is required");flattenEach(geojson,function(feature$$1,featureIndex,multiFeatureIndex){if(null!==feature$$1.geometry){var type=feature$$1.geometry.type,coords=feature$$1.geometry.coordinates;switch(type){case"LineString":if(!1===callback(feature$$1,featureIndex,multiFeatureIndex,0,0))return!1;break;case"Polygon":for(var geometryIndex=0;geometryIndex<coords.length;geometryIndex++)if(!1===callback(helpers.lineString(coords[geometryIndex],feature$$1.properties),featureIndex,multiFeatureIndex,geometryIndex))return!1}}})}exports.coordEach=coordEach,exports.coordReduce=function(geojson,callback,initialValue,excludeWrapCoord){var previousValue=initialValue;return coordEach(geojson,function(currentCoord,coordIndex,featureIndex,multiFeatureIndex,geometryIndex){previousValue=0===coordIndex&&void 0===initialValue?currentCoord:callback(previousValue,currentCoord,coordIndex,featureIndex,multiFeatureIndex,geometryIndex)},excludeWrapCoord),previousValue},exports.propEach=propEach,exports.propReduce=function(geojson,callback,initialValue){var previousValue=initialValue;return propEach(geojson,function(currentProperties,featureIndex){previousValue=0===featureIndex&&void 0===initialValue?currentProperties:callback(previousValue,currentProperties,featureIndex)}),previousValue},exports.featureEach=featureEach,exports.featureReduce=function(geojson,callback,initialValue){var previousValue=initialValue;return featureEach(geojson,function(currentFeature,featureIndex){previousValue=0===featureIndex&&void 0===initialValue?currentFeature:callback(previousValue,currentFeature,featureIndex)}),previousValue},exports.coordAll=function(geojson){var coords=[];return coordEach(geojson,function(coord){coords.push(coord)}),coords},exports.geomEach=geomEach,exports.geomReduce=function(geojson,callback,initialValue){var previousValue=initialValue;return geomEach(geojson,function(currentGeometry,featureIndex,featureProperties,featureBBox,featureId){previousValue=0===featureIndex&&void 0===initialValue?currentGeometry:callback(previousValue,currentGeometry,featureIndex,featureProperties,featureBBox,featureId)}),previousValue},exports.flattenEach=flattenEach,exports.flattenReduce=function(geojson,callback,initialValue){var previousValue=initialValue;return flattenEach(geojson,function(currentFeature,featureIndex,multiFeatureIndex){previousValue=0===featureIndex&&0===multiFeatureIndex&&void 0===initialValue?currentFeature:callback(previousValue,currentFeature,featureIndex,multiFeatureIndex)}),previousValue},exports.segmentEach=segmentEach,exports.segmentReduce=function(geojson,callback,initialValue){var previousValue=initialValue,started=!1;return segmentEach(geojson,function(currentSegment,featureIndex,multiFeatureIndex,geometryIndex,segmentIndex){previousValue=!1===started&&void 0===initialValue?currentSegment:callback(previousValue,currentSegment,featureIndex,multiFeatureIndex,geometryIndex,segmentIndex),started=!0}),previousValue},exports.lineEach=lineEach,exports.lineReduce=function(geojson,callback,initialValue){var previousValue=initialValue;return lineEach(geojson,function(currentLine,featureIndex,multiFeatureIndex,geometryIndex){previousValue=0===featureIndex&&void 0===initialValue?currentLine:callback(previousValue,currentLine,featureIndex,multiFeatureIndex,geometryIndex)}),previousValue},exports.findSegment=function(geojson,options){if(options=options||{},!helpers.isObject(options))throw new Error("options is invalid");var geometry,featureIndex=options.featureIndex||0,multiFeatureIndex=options.multiFeatureIndex||0,geometryIndex=options.geometryIndex||0,segmentIndex=options.segmentIndex||0,properties=options.properties;switch(geojson.type){case"FeatureCollection":featureIndex<0&&(featureIndex=geojson.features.length+featureIndex),properties=properties||geojson.features[featureIndex].properties,geometry=geojson.features[featureIndex].geometry;break;case"Feature":properties=properties||geojson.properties,geometry=geojson.geometry;break;case"Point":case"MultiPoint":return null;case"LineString":case"Polygon":case"MultiLineString":case"MultiPolygon":geometry=geojson;break;default:throw new Error("geojson is invalid")}if(null===geometry)return null;var coords=geometry.coordinates;switch(geometry.type){case"Point":case"MultiPoint":return null;case"LineString":return segmentIndex<0&&(segmentIndex=coords.length+segmentIndex-1),helpers.lineString([coords[segmentIndex],coords[segmentIndex+1]],properties,options);case"Polygon":return geometryIndex<0&&(geometryIndex=coords.length+geometryIndex),segmentIndex<0&&(segmentIndex=coords[geometryIndex].length+segmentIndex-1),helpers.lineString([coords[geometryIndex][segmentIndex],coords[geometryIndex][segmentIndex+1]],properties,options);case"MultiLineString":return multiFeatureIndex<0&&(multiFeatureIndex=coords.length+multiFeatureIndex),segmentIndex<0&&(segmentIndex=coords[multiFeatureIndex].length+segmentIndex-1),helpers.lineString([coords[multiFeatureIndex][segmentIndex],coords[multiFeatureIndex][segmentIndex+1]],properties,options);case"MultiPolygon":return multiFeatureIndex<0&&(multiFeatureIndex=coords.length+multiFeatureIndex),geometryIndex<0&&(geometryIndex=coords[multiFeatureIndex].length+geometryIndex),segmentIndex<0&&(segmentIndex=coords[multiFeatureIndex][geometryIndex].length-segmentIndex-1),helpers.lineString([coords[multiFeatureIndex][geometryIndex][segmentIndex],coords[multiFeatureIndex][geometryIndex][segmentIndex+1]],properties,options)}throw new Error("geojson is invalid")},exports.findPoint=function(geojson,options){if(options=options||{},!helpers.isObject(options))throw new Error("options is invalid");var geometry,featureIndex=options.featureIndex||0,multiFeatureIndex=options.multiFeatureIndex||0,geometryIndex=options.geometryIndex||0,coordIndex=options.coordIndex||0,properties=options.properties;switch(geojson.type){case"FeatureCollection":featureIndex<0&&(featureIndex=geojson.features.length+featureIndex),properties=properties||geojson.features[featureIndex].properties,geometry=geojson.features[featureIndex].geometry;break;case"Feature":properties=properties||geojson.properties,geometry=geojson.geometry;break;case"Point":case"MultiPoint":return null;case"LineString":case"Polygon":case"MultiLineString":case"MultiPolygon":geometry=geojson;break;default:throw new Error("geojson is invalid")}if(null===geometry)return null;var coords=geometry.coordinates;switch(geometry.type){case"Point":return helpers.point(coords,properties,options);case"MultiPoint":return multiFeatureIndex<0&&(multiFeatureIndex=coords.length+multiFeatureIndex),helpers.point(coords[multiFeatureIndex],properties,options);case"LineString":return coordIndex<0&&(coordIndex=coords.length+coordIndex),helpers.point(coords[coordIndex],properties,options);case"Polygon":return geometryIndex<0&&(geometryIndex=coords.length+geometryIndex),coordIndex<0&&(coordIndex=coords[geometryIndex].length+coordIndex),helpers.point(coords[geometryIndex][coordIndex],properties,options);case"MultiLineString":return multiFeatureIndex<0&&(multiFeatureIndex=coords.length+multiFeatureIndex),coordIndex<0&&(coordIndex=coords[multiFeatureIndex].length+coordIndex),helpers.point(coords[multiFeatureIndex][coordIndex],properties,options);case"MultiPolygon":return multiFeatureIndex<0&&(multiFeatureIndex=coords.length+multiFeatureIndex),geometryIndex<0&&(geometryIndex=coords[multiFeatureIndex].length+geometryIndex),coordIndex<0&&(coordIndex=coords[multiFeatureIndex][geometryIndex].length-coordIndex),helpers.point(coords[multiFeatureIndex][geometryIndex][coordIndex],properties,options)}throw new Error("geojson is invalid")}},{"@turf/helpers":10}],12:[function(require,module,exports){"use strict";var meta=require("@turf/meta"),helpers=require("@turf/helpers");function centroid(geojson,properties){var xSum=0,ySum=0,len=0;return meta.coordEach(geojson,function(coord){xSum+=coord[0],ySum+=coord[1],len++},!0),helpers.point([xSum/len,ySum/len],properties)}module.exports=centroid,module.exports.default=centroid},{"@turf/helpers":13,"@turf/meta":14}],13:[function(require,module,exports){arguments[4][10][0].apply(exports,arguments)},{dup:10}],14:[function(require,module,exports){arguments[4][11][0].apply(exports,arguments)},{"@turf/helpers":13,dup:11}],15:[function(require,module,exports){"use strict";var ex,destination=(ex=require("@turf/destination"))&&"object"==typeof ex&&"default"in ex?ex.default:ex,helpers=require("@turf/helpers");function circle(center,radius,options){var steps=(options=options||{}).steps||64,properties=options.properties;if(!center)throw new Error("center is required");if(!radius)throw new Error("radius is required");if("object"!=typeof options)throw new Error("options must be an object");if("number"!=typeof steps)throw new Error("steps must be a number");steps=steps||64,properties=properties||center.properties||{};for(var coordinates=[],i=0;i<steps;i++)coordinates.push(destination(center,radius,-360*i/steps,options).geometry.coordinates);return coordinates.push(coordinates[0]),helpers.polygon([coordinates],properties)}module.exports=circle,module.exports.default=circle},{"@turf/destination":16,"@turf/helpers":17}],16:[function(require,module,exports){"use strict";var invariant=require("@turf/invariant"),helpers=require("@turf/helpers");function destination(origin,distance,bearing,options){if(options=options||{},!helpers.isObject(options))throw new Error("options is invalid");var units=options.units,properties=options.properties,coordinates1=invariant.getCoord(origin),longitude1=helpers.degreesToRadians(coordinates1[0]),latitude1=helpers.degreesToRadians(coordinates1[1]),bearing_rad=helpers.degreesToRadians(bearing),radians=helpers.lengthToRadians(distance,units),latitude2=Math.asin(Math.sin(latitude1)*Math.cos(radians)+Math.cos(latitude1)*Math.sin(radians)*Math.cos(bearing_rad)),longitude2=longitude1+Math.atan2(Math.sin(bearing_rad)*Math.sin(radians)*Math.cos(latitude1),Math.cos(radians)-Math.sin(latitude1)*Math.sin(latitude2)),lng=helpers.radiansToDegrees(longitude2),lat=helpers.radiansToDegrees(latitude2);return helpers.point([lng,lat],properties)}module.exports=destination,module.exports.default=destination},{"@turf/helpers":17,"@turf/invariant":18}],17:[function(require,module,exports){arguments[4][10][0].apply(exports,arguments)},{dup:10}],18:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var helpers=require("@turf/helpers");exports.getCoord=function(coord){if(!coord)throw new Error("coord is required");if("Feature"===coord.type&&null!==coord.geometry&&"Point"===coord.geometry.type)return coord.geometry.coordinates;if("Point"===coord.type)return coord.coordinates;if(Array.isArray(coord)&&coord.length>=2&&void 0===coord[0].length&&void 0===coord[1].length)return coord;throw new Error("coord must be GeoJSON Point or an Array of numbers")},exports.getCoords=function(coords){if(!coords)throw new Error("coords is required");if("Feature"===coords.type&&null!==coords.geometry)return coords.geometry.coordinates;if(coords.coordinates)return coords.coordinates;if(Array.isArray(coords))return coords;throw new Error("coords must be GeoJSON Feature, Geometry Object or an Array")},exports.containsNumber=function containsNumber(coordinates){if(coordinates.length>1&&helpers.isNumber(coordinates[0])&&helpers.isNumber(coordinates[1]))return!0;if(Array.isArray(coordinates[0])&&coordinates[0].length)return containsNumber(coordinates[0]);throw new Error("coordinates must only contain numbers")},exports.geojsonType=function(value,type,name){if(!type||!name)throw new Error("type and name required");if(!value||value.type!==type)throw new Error("Invalid input to "+name+": must be a "+type+", given "+value.type)},exports.featureOf=function(feature,type,name){if(!feature)throw new Error("No feature passed");if(!name)throw new Error(".featureOf() requires a name");if(!feature||"Feature"!==feature.type||!feature.geometry)throw new Error("Invalid input to "+name+", Feature with geometry required");if(!feature.geometry||feature.geometry.type!==type)throw new Error("Invalid input to "+name+": must be a "+type+", given "+feature.geometry.type)},exports.collectionOf=function(featureCollection,type,name){if(!featureCollection)throw new Error("No featureCollection passed");if(!name)throw new Error(".collectionOf() requires a name");if(!featureCollection||"FeatureCollection"!==featureCollection.type)throw new Error("Invalid input to "+name+", FeatureCollection required");for(var i=0;i<featureCollection.features.length;i++){var feature=featureCollection.features[i];if(!feature||"Feature"!==feature.type||!feature.geometry)throw new Error("Invalid input to "+name+", Feature with geometry required");if(!feature.geometry||feature.geometry.type!==type)throw new Error("Invalid input to "+name+": must be a "+type+", given "+feature.geometry.type)}},exports.getGeom=function(geojson){if(!geojson)throw new Error("geojson is required");if(void 0!==geojson.geometry)return geojson.geometry;if(geojson.coordinates||geojson.geometries)return geojson;throw new Error("geojson must be a valid Feature or Geometry Object")},exports.getGeomType=function(){throw new Error("invariant.getGeomType has been deprecated in v5.0 in favor of invariant.getType")},exports.getType=function(geojson,name){if(!geojson)throw new Error((name||"geojson")+" is required");if(geojson.geometry&&geojson.geometry.type)return geojson.geometry.type;if(geojson.type)return geojson.type;throw new Error((name||"geojson")+" is invalid")}},{"@turf/helpers":17}],19:[function(require,module,exports){"use strict";function clone(geojson){if(!geojson)throw new Error("geojson is required");switch(geojson.type){case"Feature":return cloneFeature(geojson);case"FeatureCollection":return function(geojson){var cloned={type:"FeatureCollection"};return Object.keys(geojson).forEach(function(key){switch(key){case"type":case"features":return;default:cloned[key]=geojson[key]}}),cloned.features=geojson.features.map(function(feature){return cloneFeature(feature)}),cloned}(geojson);case"Point":case"LineString":case"Polygon":case"MultiPoint":case"MultiLineString":case"MultiPolygon":case"GeometryCollection":return cloneGeometry(geojson);default:throw new Error("unknown GeoJSON type")}}function cloneFeature(geojson){var cloned={type:"Feature"};return Object.keys(geojson).forEach(function(key){switch(key){case"type":case"properties":case"geometry":return;default:cloned[key]=geojson[key]}}),cloned.properties=function cloneProperties(properties){var cloned={};if(!properties)return cloned;Object.keys(properties).forEach(function(key){var value=properties[key];"object"==typeof value?null===value?cloned[key]=null:value.length?cloned[key]=value.map(function(item){return item}):cloned[key]=cloneProperties(value):cloned[key]=value});return cloned}(geojson.properties),cloned.geometry=cloneGeometry(geojson.geometry),cloned}function cloneGeometry(geometry){var geom={type:geometry.type};return geometry.bbox&&(geom.bbox=geometry.bbox),"GeometryCollection"===geometry.type?(geom.geometries=geometry.geometries.map(function(geom){return cloneGeometry(geom)}),geom):(geom.coordinates=function deepSlice(coords){if("object"!=typeof coords[0])return coords.slice();return coords.map(function(coord){return deepSlice(coord)})}(geometry.coordinates),geom)}module.exports=clone,module.exports.default=clone},{}],20:[function(require,module,exports){"use strict";var __importDefault=this&&this.__importDefault||function(mod){return mod&&mod.__esModule?mod:{default:mod}};Object.defineProperty(exports,"__esModule",{value:!0});var helpers_1=require("@turf/helpers"),meta_1=require("@turf/meta"),concaveman_1=__importDefault(require("concaveman"));exports.default=function(geojson,options){void 0===options&&(options={}),options.concavity=options.concavity||1/0;var points=[];if(meta_1.coordEach(geojson,function(coord){points.push([coord[0],coord[1]])}),!points.length)return null;var convexHull=concaveman_1.default(points,options.concavity);return convexHull.length>3?helpers_1.polygon([convexHull]):null}},{"@turf/helpers":23,"@turf/meta":34,concaveman:60}],21:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var helpers_1=require("@turf/helpers"),invariant_1=require("@turf/invariant");exports.default=function(origin,distance,bearing,options){void 0===options&&(options={});var coordinates1=invariant_1.getCoord(origin),longitude1=helpers_1.degreesToRadians(coordinates1[0]),latitude1=helpers_1.degreesToRadians(coordinates1[1]),bearingRad=helpers_1.degreesToRadians(bearing),radians=helpers_1.lengthToRadians(distance,options.units),latitude2=Math.asin(Math.sin(latitude1)*Math.cos(radians)+Math.cos(latitude1)*Math.sin(radians)*Math.cos(bearingRad)),longitude2=longitude1+Math.atan2(Math.sin(bearingRad)*Math.sin(radians)*Math.cos(latitude1),Math.cos(radians)-Math.sin(latitude1)*Math.sin(latitude2)),lng=helpers_1.radiansToDegrees(longitude2),lat=helpers_1.radiansToDegrees(latitude2);return helpers_1.point([lng,lat],options.properties)}},{"@turf/helpers":23,"@turf/invariant":24}],22:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var invariant_1=require("@turf/invariant"),helpers_1=require("@turf/helpers");exports.default=function(from,to,options){void 0===options&&(options={});var coordinates1=invariant_1.getCoord(from),coordinates2=invariant_1.getCoord(to),dLat=helpers_1.degreesToRadians(coordinates2[1]-coordinates1[1]),dLon=helpers_1.degreesToRadians(coordinates2[0]-coordinates1[0]),lat1=helpers_1.degreesToRadians(coordinates1[1]),lat2=helpers_1.degreesToRadians(coordinates2[1]),a=Math.pow(Math.sin(dLat/2),2)+Math.pow(Math.sin(dLon/2),2)*Math.cos(lat1)*Math.cos(lat2);return helpers_1.radiansToLength(2*Math.atan2(Math.sqrt(a),Math.sqrt(1-a)),options.units)}},{"@turf/helpers":23,"@turf/invariant":24}],23:[function(require,module,exports){"use strict";function feature(geom,properties,options){void 0===options&&(options={});var feat={type:"Feature"};return(0===options.id||options.id)&&(feat.id=options.id),options.bbox&&(feat.bbox=options.bbox),feat.properties=properties||{},feat.geometry=geom,feat}function point(coordinates,properties,options){return void 0===options&&(options={}),feature({type:"Point",coordinates:coordinates},properties,options)}function polygon(coordinates,properties,options){void 0===options&&(options={});for(var _i=0,coordinates_1=coordinates;_i<coordinates_1.length;_i++){var ring=coordinates_1[_i];if(ring.length<4)throw new Error("Each LinearRing of a Polygon must have 4 or more Positions.");for(var j=0;j<ring[ring.length-1].length;j++)if(ring[ring.length-1][j]!==ring[0][j])throw new Error("First and last Position are not equivalent.")}return feature({type:"Polygon",coordinates:coordinates},properties,options)}function lineString(coordinates,properties,options){if(void 0===options&&(options={}),coordinates.length<2)throw new Error("coordinates must be an array of two or more positions");return feature({type:"LineString",coordinates:coordinates},properties,options)}function featureCollection(features,options){void 0===options&&(options={});var fc={type:"FeatureCollection"};return options.id&&(fc.id=options.id),options.bbox&&(fc.bbox=options.bbox),fc.features=features,fc}function multiLineString(coordinates,properties,options){return void 0===options&&(options={}),feature({type:"MultiLineString",coordinates:coordinates},properties,options)}function multiPoint(coordinates,properties,options){return void 0===options&&(options={}),feature({type:"MultiPoint",coordinates:coordinates},properties,options)}function multiPolygon(coordinates,properties,options){return void 0===options&&(options={}),feature({type:"MultiPolygon",coordinates:coordinates},properties,options)}function radiansToLength(radians,units){void 0===units&&(units="kilometers");var factor=exports.factors[units];if(!factor)throw new Error(units+" units is invalid");return radians*factor}function lengthToRadians(distance,units){void 0===units&&(units="kilometers");var factor=exports.factors[units];if(!factor)throw new Error(units+" units is invalid");return distance/factor}function radiansToDegrees(radians){return 180*(radians%(2*Math.PI))/Math.PI}function isNumber(num){return!isNaN(num)&&null!==num&&!Array.isArray(num)&&!/^\s*$/.test(num)}Object.defineProperty(exports,"__esModule",{value:!0}),exports.earthRadius=6371008.8,exports.factors={centimeters:100*exports.earthRadius,centimetres:100*exports.earthRadius,degrees:exports.earthRadius/111325,feet:3.28084*exports.earthRadius,inches:39.37*exports.earthRadius,kilometers:exports.earthRadius/1e3,kilometres:exports.earthRadius/1e3,meters:exports.earthRadius,metres:exports.earthRadius,miles:exports.earthRadius/1609.344,millimeters:1e3*exports.earthRadius,millimetres:1e3*exports.earthRadius,nauticalmiles:exports.earthRadius/1852,radians:1,yards:exports.earthRadius/1.0936},exports.unitsFactors={centimeters:100,centimetres:100,degrees:1/111325,feet:3.28084,inches:39.37,kilometers:.001,kilometres:.001,meters:1,metres:1,miles:1/1609.344,millimeters:1e3,millimetres:1e3,nauticalmiles:1/1852,radians:1/exports.earthRadius,yards:1/1.0936},exports.areaFactors={acres:247105e-9,centimeters:1e4,centimetres:1e4,feet:10.763910417,inches:1550.003100006,kilometers:1e-6,kilometres:1e-6,meters:1,metres:1,miles:3.86e-7,millimeters:1e6,millimetres:1e6,yards:1.195990046},exports.feature=feature,exports.geometry=function(type,coordinates,options){switch(void 0===options&&(options={}),type){case"Point":return point(coordinates).geometry;case"LineString":return lineString(coordinates).geometry;case"Polygon":return polygon(coordinates).geometry;case"MultiPoint":return multiPoint(coordinates).geometry;case"MultiLineString":return multiLineString(coordinates).geometry;case"MultiPolygon":return multiPolygon(coordinates).geometry;default:throw new Error(type+" is invalid")}},exports.point=point,exports.points=function(coordinates,properties,options){return void 0===options&&(options={}),featureCollection(coordinates.map(function(coords){return point(coords,properties)}),options)},exports.polygon=polygon,exports.polygons=function(coordinates,properties,options){return void 0===options&&(options={}),featureCollection(coordinates.map(function(coords){return polygon(coords,properties)}),options)},exports.lineString=lineString,exports.lineStrings=function(coordinates,properties,options){return void 0===options&&(options={}),featureCollection(coordinates.map(function(coords){return lineString(coords,properties)}),options)},exports.featureCollection=featureCollection,exports.multiLineString=multiLineString,exports.multiPoint=multiPoint,exports.multiPolygon=multiPolygon,exports.geometryCollection=function(geometries,properties,options){return void 0===options&&(options={}),feature({type:"GeometryCollection",geometries:geometries},properties,options)},exports.round=function(num,precision){if(void 0===precision&&(precision=0),precision&&!(precision>=0))throw new Error("precision must be a positive number");var multiplier=Math.pow(10,precision||0);return Math.round(num*multiplier)/multiplier},exports.radiansToLength=radiansToLength,exports.lengthToRadians=lengthToRadians,exports.lengthToDegrees=function(distance,units){return radiansToDegrees(lengthToRadians(distance,units))},exports.bearingToAzimuth=function(bearing){var angle=bearing%360;return angle<0&&(angle+=360),angle},exports.radiansToDegrees=radiansToDegrees,exports.degreesToRadians=function(degrees){return degrees%360*Math.PI/180},exports.convertLength=function(length,originalUnit,finalUnit){if(void 0===originalUnit&&(originalUnit="kilometers"),void 0===finalUnit&&(finalUnit="kilometers"),!(length>=0))throw new Error("length must be a positive number");return radiansToLength(lengthToRadians(length,originalUnit),finalUnit)},exports.convertArea=function(area,originalUnit,finalUnit){if(void 0===originalUnit&&(originalUnit="meters"),void 0===finalUnit&&(finalUnit="kilometers"),!(area>=0))throw new Error("area must be a positive number");var startFactor=exports.areaFactors[originalUnit];if(!startFactor)throw new Error("invalid original units");var finalFactor=exports.areaFactors[finalUnit];if(!finalFactor)throw new Error("invalid final units");return area/startFactor*finalFactor},exports.isNumber=isNumber,exports.isObject=function(input){return!!input&&input.constructor===Object},exports.validateBBox=function(bbox){if(!bbox)throw new Error("bbox is required");if(!Array.isArray(bbox))throw new Error("bbox must be an Array");if(4!==bbox.length&&6!==bbox.length)throw new Error("bbox must be an Array of 4 or 6 numbers");bbox.forEach(function(num){if(!isNumber(num))throw new Error("bbox must only contain numbers")})},exports.validateId=function(id){if(!id)throw new Error("id is required");if(-1===["string","number"].indexOf(typeof id))throw new Error("id must be a number or a string")},exports.radians2degrees=function(){throw new Error("method has been renamed to `radiansToDegrees`")},exports.degrees2radians=function(){throw new Error("method has been renamed to `degreesToRadians`")},exports.distanceToDegrees=function(){throw new Error("method has been renamed to `lengthToDegrees`")},exports.distanceToRadians=function(){throw new Error("method has been renamed to `lengthToRadians`")},exports.radiansToDistance=function(){throw new Error("method has been renamed to `radiansToLength`")},exports.bearingToAngle=function(){throw new Error("method has been renamed to `bearingToAzimuth`")},exports.convertDistance=function(){throw new Error("method has been renamed to `convertLength`")}},{}],24:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var helpers_1=require("@turf/helpers");exports.getCoord=function(coord){if(!coord)throw new Error("coord is required");if(!Array.isArray(coord)){if("Feature"===coord.type&&null!==coord.geometry&&"Point"===coord.geometry.type)return coord.geometry.coordinates;if("Point"===coord.type)return coord.coordinates}if(Array.isArray(coord)&&coord.length>=2&&!Array.isArray(coord[0])&&!Array.isArray(coord[1]))return coord;throw new Error("coord must be GeoJSON Point or an Array of numbers")},exports.getCoords=function(coords){if(Array.isArray(coords))return coords;if("Feature"===coords.type){if(null!==coords.geometry)return coords.geometry.coordinates}else if(coords.coordinates)return coords.coordinates;throw new Error("coords must be GeoJSON Feature, Geometry Object or an Array")},exports.containsNumber=function containsNumber(coordinates){if(coordinates.length>1&&helpers_1.isNumber(coordinates[0])&&helpers_1.isNumber(coordinates[1]))return!0;if(Array.isArray(coordinates[0])&&coordinates[0].length)return containsNumber(coordinates[0]);throw new Error("coordinates must only contain numbers")},exports.geojsonType=function(value,type,name){if(!type||!name)throw new Error("type and name required");if(!value||value.type!==type)throw new Error("Invalid input to "+name+": must be a "+type+", given "+value.type)},exports.featureOf=function(feature,type,name){if(!feature)throw new Error("No feature passed");if(!name)throw new Error(".featureOf() requires a name");if(!feature||"Feature"!==feature.type||!feature.geometry)throw new Error("Invalid input to "+name+", Feature with geometry required");if(!feature.geometry||feature.geometry.type!==type)throw new Error("Invalid input to "+name+": must be a "+type+", given "+feature.geometry.type)},exports.collectionOf=function(featureCollection,type,name){if(!featureCollection)throw new Error("No featureCollection passed");if(!name)throw new Error(".collectionOf() requires a name");if(!featureCollection||"FeatureCollection"!==featureCollection.type)throw new Error("Invalid input to "+name+", FeatureCollection required");for(var _i=0,_a=featureCollection.features;_i<_a.length;_i++){var feature=_a[_i];if(!feature||"Feature"!==feature.type||!feature.geometry)throw new Error("Invalid input to "+name+", Feature with geometry required");if(!feature.geometry||feature.geometry.type!==type)throw new Error("Invalid input to "+name+": must be a "+type+", given "+feature.geometry.type)}},exports.getGeom=function(geojson){return"Feature"===geojson.type?geojson.geometry:geojson},exports.getType=function(geojson,name){return"FeatureCollection"===geojson.type?"FeatureCollection":"GeometryCollection"===geojson.type?"GeometryCollection":"Feature"===geojson.type&&null!==geojson.geometry?geojson.geometry.type:geojson.type}},{"@turf/helpers":23}],25:[function(require,module,exports){"use strict";var __importDefault=this&&this.__importDefault||function(mod){return mod&&mod.__esModule?mod:{default:mod}};Object.defineProperty(exports,"__esModule",{value:!0});var distance_1=__importDefault(require("@turf/distance")),meta_1=require("@turf/meta");exports.default=function(geojson,options){return void 0===options&&(options={}),meta_1.segmentReduce(geojson,function(previousValue,segment){var coords=segment.geometry.coordinates;return previousValue+distance_1.default(coords[0],coords[1],options)},0)}},{"@turf/distance":22,"@turf/meta":34}],26:[function(require,module,exports){"use strict";function _interopDefault(ex){return ex&&"object"==typeof ex&&"default"in ex?ex.default:ex}var destination=_interopDefault(require("@turf/destination")),circle=_interopDefault(require("@turf/circle")),helpers=require("@turf/helpers");function lineArc(center,radius,bearing1,bearing2,options){if(options=options||{},!helpers.isObject(options))throw new Error("options is invalid");var steps=options.steps,units=options.units;if(!center)throw new Error("center is required");if(!radius)throw new Error("radius is required");if(void 0===bearing1||null===bearing1)throw new Error("bearing1 is required");if(void 0===bearing2||null===bearing2)throw new Error("bearing2 is required");if("object"!=typeof options)throw new Error("options must be an object");steps=steps||64;var angle1=convertAngleTo360(bearing1),angle2=convertAngleTo360(bearing2),properties=center.properties;if(angle1===angle2)return helpers.lineString(circle(center,radius,options).geometry.coordinates[0],properties);for(var arcStartDegree=angle1,arcEndDegree=angle1<angle2?angle2:angle2+360,alfa=arcStartDegree,coordinates=[],i=0;alfa<arcEndDegree;)coordinates.push(destination(center,radius,alfa,units).geometry.coordinates),alfa=arcStartDegree+360*++i/steps;return alfa>arcEndDegree&&coordinates.push(destination(center,radius,arcEndDegree,units).geometry.coordinates),helpers.lineString(coordinates,properties)}function convertAngleTo360(alfa){var beta=alfa%360;return beta<0&&(beta+=360),beta}module.exports=lineArc,module.exports.default=lineArc},{"@turf/circle":15,"@turf/destination":27,"@turf/helpers":28}],27:[function(require,module,exports){arguments[4][16][0].apply(exports,arguments)},{"@turf/helpers":28,"@turf/invariant":29,dup:16}],28:[function(require,module,exports){arguments[4][10][0].apply(exports,arguments)},{dup:10}],29:[function(require,module,exports){arguments[4][18][0].apply(exports,arguments)},{"@turf/helpers":28,dup:18}],30:[function(require,module,exports){"use strict";var __importDefault=this&&this.__importDefault||function(mod){return mod&&mod.__esModule?mod:{default:mod}};Object.defineProperty(exports,"__esModule",{value:!0});var helpers_1=require("@turf/helpers"),invariant_1=require("@turf/invariant"),line_segment_1=__importDefault(require("@turf/line-segment")),meta_1=require("@turf/meta"),geojson_rbush_1=__importDefault(require("geojson-rbush"));function intersects(line1,line2){var coords1=invariant_1.getCoords(line1),coords2=invariant_1.getCoords(line2);if(2!==coords1.length)throw new Error("<intersects> line1 must only contain 2 coordinates");if(2!==coords2.length)throw new Error("<intersects> line2 must only contain 2 coordinates");var x1=coords1[0][0],y1=coords1[0][1],x2=coords1[1][0],y2=coords1[1][1],x3=coords2[0][0],y3=coords2[0][1],x4=coords2[1][0],y4=coords2[1][1],denom=(y4-y3)*(x2-x1)-(x4-x3)*(y2-y1),numeA=(x4-x3)*(y1-y3)-(y4-y3)*(x1-x3),numeB=(x2-x1)*(y1-y3)-(y2-y1)*(x1-x3);if(0===denom)return null;var uA=numeA/denom,uB=numeB/denom;if(uA>=0&&uA<=1&&uB>=0&&uB<=1){var x=x1+uA*(x2-x1),y=y1+uA*(y2-y1);return helpers_1.point([x,y])}return null}exports.default=function(line1,line2){var unique={},results=[];if("LineString"===line1.type&&(line1=helpers_1.feature(line1)),"LineString"===line2.type&&(line2=helpers_1.feature(line2)),"Feature"===line1.type&&"Feature"===line2.type&&null!==line1.geometry&&null!==line2.geometry&&"LineString"===line1.geometry.type&&"LineString"===line2.geometry.type&&2===line1.geometry.coordinates.length&&2===line2.geometry.coordinates.length){var intersect=intersects(line1,line2);return intersect&&results.push(intersect),helpers_1.featureCollection(results)}var tree=geojson_rbush_1.default();return tree.load(line_segment_1.default(line2)),meta_1.featureEach(line_segment_1.default(line1),function(segment){meta_1.featureEach(tree.search(segment),function(match){var intersect=intersects(segment,match);if(intersect){var key=invariant_1.getCoords(intersect).join(",");unique[key]||(unique[key]=!0,results.push(intersect))}})}),helpers_1.featureCollection(results)}},{"@turf/helpers":23,"@turf/invariant":24,"@turf/line-segment":32,"@turf/meta":34,"geojson-rbush":69}],31:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var geojson_rbush_1=require("geojson-rbush"),line_segment_1=require("@turf/line-segment"),nearest_point_on_line_1=require("@turf/nearest-point-on-line"),boolean_point_on_line_1=require("@turf/boolean-point-on-line"),invariant_1=require("@turf/invariant"),meta_1=require("@turf/meta"),helpers_1=require("@turf/helpers"),equal=require("deep-equal");function concatSegment(line,segment){var coords=invariant_1.getCoords(segment),lineCoords=invariant_1.getCoords(line),start=lineCoords[0],end=lineCoords[lineCoords.length-1],geom=line.geometry.coordinates;return equal(coords[0],start)?geom.unshift(coords[1]):equal(coords[0],end)?geom.push(coords[1]):equal(coords[1],start)?geom.unshift(coords[0]):equal(coords[1],end)&&geom.push(coords[0]),line}exports.default=function(line1,line2,options){if(void 0===options&&(options={}),options=options||{},!helpers_1.isObject(options))throw new Error("options is invalid");var overlapSegment,tolerance=options.tolerance||0,features=[],tree=geojson_rbush_1.default(),line=line_segment_1.default(line1);return tree.load(line),meta_1.segmentEach(line2,function(segment){var doesOverlaps=!1;meta_1.featureEach(tree.search(segment),function(match){if(!1===doesOverlaps){var coordsSegment=invariant_1.getCoords(segment).sort(),coordsMatch=invariant_1.getCoords(match).sort();equal(coordsSegment,coordsMatch)?(doesOverlaps=!0,overlapSegment=overlapSegment?concatSegment(overlapSegment,segment):segment):(0===tolerance?boolean_point_on_line_1.default(coordsSegment[0],match)&&boolean_point_on_line_1.default(coordsSegment[1],match):nearest_point_on_line_1.default(match,coordsSegment[0]).properties.dist<=tolerance&&nearest_point_on_line_1.default(match,coordsSegment[1]).properties.dist<=tolerance)?(doesOverlaps=!0,overlapSegment=overlapSegment?concatSegment(overlapSegment,segment):segment):(0===tolerance?boolean_point_on_line_1.default(coordsMatch[0],segment)&&boolean_point_on_line_1.default(coordsMatch[1],segment):nearest_point_on_line_1.default(segment,coordsMatch[0]).properties.dist<=tolerance&&nearest_point_on_line_1.default(segment,coordsMatch[1]).properties.dist<=tolerance)&&(overlapSegment=overlapSegment?concatSegment(overlapSegment,match):match)}}),!1===doesOverlaps&&overlapSegment&&(features.push(overlapSegment),overlapSegment=void 0)}),overlapSegment&&features.push(overlapSegment),helpers_1.featureCollection(features)}},{"@turf/boolean-point-on-line":7,"@turf/helpers":23,"@turf/invariant":24,"@turf/line-segment":32,"@turf/meta":34,"@turf/nearest-point-on-line":35,"deep-equal":62,"geojson-rbush":69}],32:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var helpers_1=require("@turf/helpers"),invariant_1=require("@turf/invariant"),meta_1=require("@turf/meta");exports.default=function(geojson){if(!geojson)throw new Error("geojson is required");var results=[];return meta_1.flattenEach(geojson,function(feature){!function(geojson,results){var coords=[],geometry=geojson.geometry;if(null!==geometry){switch(geometry.type){case"Polygon":coords=invariant_1.getCoords(geometry);break;case"LineString":coords=[invariant_1.getCoords(geometry)]}coords.forEach(function(coord){var segments=function(coords,properties){var segments=[];return coords.reduce(function(previousCoords,currentCoords){var coords1,coords2,x1,y1,x2,y2,segment=helpers_1.lineString([previousCoords,currentCoords],properties);return segment.bbox=(coords2=currentCoords,x1=(coords1=previousCoords)[0],y1=coords1[1],x2=coords2[0],y2=coords2[1],[x1<x2?x1:x2,y1<y2?y1:y2,x1>x2?x1:x2,y1>y2?y1:y2]),segments.push(segment),currentCoords}),segments}(coord,geojson.properties);segments.forEach(function(segment){segment.id=results.length,results.push(segment)})})}}(feature,results)}),helpers_1.featureCollection(results)}},{"@turf/helpers":23,"@turf/invariant":24,"@turf/meta":34}],33:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var bbox_1=require("@turf/bbox"),invariant_1=require("@turf/invariant"),helpers_1=require("@turf/helpers");function lineStringToPolygon(line,properties,autoComplete,orderCoords){properties=properties||("Feature"===line.type?line.properties:{});var geom=invariant_1.getGeom(line),coords=geom.coordinates,type=geom.type;if(!coords.length)throw new Error("line must contain coordinates");switch(type){case"LineString":return autoComplete&&(coords=autoCompleteCoords(coords)),helpers_1.polygon([coords],properties);case"MultiLineString":var multiCoords=[],largestArea=0;return coords.forEach(function(coord){if(autoComplete&&(coord=autoCompleteCoords(coord)),orderCoords){var area=(bbox=bbox_1.default(helpers_1.lineString(coord)),west=bbox[0],south=bbox[1],east=bbox[2],north=bbox[3],Math.abs(west-east)*Math.abs(south-north));area>largestArea?(multiCoords.unshift(coord),largestArea=area):multiCoords.push(coord)}else multiCoords.push(coord);var bbox,west,south,east,north}),helpers_1.polygon(multiCoords,properties);default:throw new Error("geometry type "+type+" is not supported")}}function autoCompleteCoords(coords){var first=coords[0],x1=first[0],y1=first[1],last=coords[coords.length-1],x2=last[0],y2=last[1];return x1===x2&&y1===y2||coords.push(first),coords}exports.default=function(lines,options){void 0===options&&(options={});var properties=options.properties,autoComplete=options.autoComplete,orderCoords=options.orderCoords;switch(autoComplete=void 0===autoComplete||autoComplete,orderCoords=void 0===orderCoords||orderCoords,lines.type){case"FeatureCollection":var coords=[];return lines.features.forEach(function(line){coords.push(invariant_1.getCoords(lineStringToPolygon(line,{},autoComplete,orderCoords)))}),helpers_1.multiPolygon(coords,properties);default:return lineStringToPolygon(lines,properties,autoComplete,orderCoords)}}},{"@turf/bbox":2,"@turf/helpers":23,"@turf/invariant":24}],34:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var helpers=require("@turf/helpers");function coordEach(geojson,callback,excludeWrapCoord){if(null!==geojson)for(var j,k,l,geometry,stopG,coords,geometryMaybeCollection,isGeometryCollection,wrapShrink=0,coordIndex=0,type=geojson.type,isFeatureCollection="FeatureCollection"===type,isFeature="Feature"===type,stop=isFeatureCollection?geojson.features.length:1,featureIndex=0;featureIndex<stop;featureIndex++){stopG=(isGeometryCollection=!!(geometryMaybeCollection=isFeatureCollection?geojson.features[featureIndex].geometry:isFeature?geojson.geometry:geojson)&&"GeometryCollection"===geometryMaybeCollection.type)?geometryMaybeCollection.geometries.length:1;for(var geomIndex=0;geomIndex<stopG;geomIndex++){var multiFeatureIndex=0,geometryIndex=0;if(null!==(geometry=isGeometryCollection?geometryMaybeCollection.geometries[geomIndex]:geometryMaybeCollection)){coords=geometry.coordinates;var geomType=geometry.type;switch(wrapShrink=!excludeWrapCoord||"Polygon"!==geomType&&"MultiPolygon"!==geomType?0:1,geomType){case null:break;case"Point":if(!1===callback(coords,coordIndex,featureIndex,multiFeatureIndex,geometryIndex))return!1;coordIndex++,multiFeatureIndex++;break;case"LineString":case"MultiPoint":for(j=0;j<coords.length;j++){if(!1===callback(coords[j],coordIndex,featureIndex,multiFeatureIndex,geometryIndex))return!1;coordIndex++,"MultiPoint"===geomType&&multiFeatureIndex++}"LineString"===geomType&&multiFeatureIndex++;break;case"Polygon":case"MultiLineString":for(j=0;j<coords.length;j++){for(k=0;k<coords[j].length-wrapShrink;k++){if(!1===callback(coords[j][k],coordIndex,featureIndex,multiFeatureIndex,geometryIndex))return!1;coordIndex++}"MultiLineString"===geomType&&multiFeatureIndex++,"Polygon"===geomType&&geometryIndex++}"Polygon"===geomType&&multiFeatureIndex++;break;case"MultiPolygon":for(j=0;j<coords.length;j++){for(geometryIndex=0,k=0;k<coords[j].length;k++){for(l=0;l<coords[j][k].length-wrapShrink;l++){if(!1===callback(coords[j][k][l],coordIndex,featureIndex,multiFeatureIndex,geometryIndex))return!1;coordIndex++}geometryIndex++}multiFeatureIndex++}break;case"GeometryCollection":for(j=0;j<geometry.geometries.length;j++)if(!1===coordEach(geometry.geometries[j],callback,excludeWrapCoord))return!1;break;default:throw new Error("Unknown Geometry Type")}}}}}function propEach(geojson,callback){var i;switch(geojson.type){case"FeatureCollection":for(i=0;i<geojson.features.length&&!1!==callback(geojson.features[i].properties,i);i++);break;case"Feature":callback(geojson.properties,0)}}function featureEach(geojson,callback){if("Feature"===geojson.type)callback(geojson,0);else if("FeatureCollection"===geojson.type)for(var i=0;i<geojson.features.length&&!1!==callback(geojson.features[i],i);i++);}function geomEach(geojson,callback){var i,j,g,geometry,stopG,geometryMaybeCollection,isGeometryCollection,featureProperties,featureBBox,featureId,featureIndex=0,isFeatureCollection="FeatureCollection"===geojson.type,isFeature="Feature"===geojson.type,stop=isFeatureCollection?geojson.features.length:1;for(i=0;i<stop;i++){for(geometryMaybeCollection=isFeatureCollection?geojson.features[i].geometry:isFeature?geojson.geometry:geojson,featureProperties=isFeatureCollection?geojson.features[i].properties:isFeature?geojson.properties:{},featureBBox=isFeatureCollection?geojson.features[i].bbox:isFeature?geojson.bbox:void 0,featureId=isFeatureCollection?geojson.features[i].id:isFeature?geojson.id:void 0,stopG=(isGeometryCollection=!!geometryMaybeCollection&&"GeometryCollection"===geometryMaybeCollection.type)?geometryMaybeCollection.geometries.length:1,g=0;g<stopG;g++)if(null!==(geometry=isGeometryCollection?geometryMaybeCollection.geometries[g]:geometryMaybeCollection))switch(geometry.type){case"Point":case"LineString":case"MultiPoint":case"Polygon":case"MultiLineString":case"MultiPolygon":if(!1===callback(geometry,featureIndex,featureProperties,featureBBox,featureId))return!1;break;case"GeometryCollection":for(j=0;j<geometry.geometries.length;j++)if(!1===callback(geometry.geometries[j],featureIndex,featureProperties,featureBBox,featureId))return!1;break;default:throw new Error("Unknown Geometry Type")}else if(!1===callback(null,featureIndex,featureProperties,featureBBox,featureId))return!1;featureIndex++}}function flattenEach(geojson,callback){geomEach(geojson,function(geometry,featureIndex,properties,bbox,id){var geomType,type=null===geometry?null:geometry.type;switch(type){case null:case"Point":case"LineString":case"Polygon":return!1!==callback(helpers.feature(geometry,properties,{bbox:bbox,id:id}),featureIndex,0)&&void 0}switch(type){case"MultiPoint":geomType="Point";break;case"MultiLineString":geomType="LineString";break;case"MultiPolygon":geomType="Polygon"}for(var multiFeatureIndex=0;multiFeatureIndex<geometry.coordinates.length;multiFeatureIndex++){var geom={type:geomType,coordinates:geometry.coordinates[multiFeatureIndex]};if(!1===callback(helpers.feature(geom,properties),featureIndex,multiFeatureIndex))return!1}})}function segmentEach(geojson,callback){flattenEach(geojson,function(feature,featureIndex,multiFeatureIndex){var segmentIndex=0;if(feature.geometry){var type=feature.geometry.type;if("Point"!==type&&"MultiPoint"!==type){var previousCoords,previousFeatureIndex=0,previousMultiIndex=0,prevGeomIndex=0;return!1!==coordEach(feature,function(currentCoord,coordIndex,featureIndexCoord,multiPartIndexCoord,geometryIndex){if(void 0===previousCoords||featureIndex>previousFeatureIndex||multiPartIndexCoord>previousMultiIndex||geometryIndex>prevGeomIndex)return previousCoords=currentCoord,previousFeatureIndex=featureIndex,previousMultiIndex=multiPartIndexCoord,prevGeomIndex=geometryIndex,void(segmentIndex=0);var currentSegment=helpers.lineString([previousCoords,currentCoord],feature.properties);if(!1===callback(currentSegment,featureIndex,multiFeatureIndex,geometryIndex,segmentIndex))return!1;segmentIndex++,previousCoords=currentCoord})&&void 0}}})}function lineEach(geojson,callback){if(!geojson)throw new Error("geojson is required");flattenEach(geojson,function(feature,featureIndex,multiFeatureIndex){if(null!==feature.geometry){var type=feature.geometry.type,coords=feature.geometry.coordinates;switch(type){case"LineString":if(!1===callback(feature,featureIndex,multiFeatureIndex,0,0))return!1;break;case"Polygon":for(var geometryIndex=0;geometryIndex<coords.length;geometryIndex++)if(!1===callback(helpers.lineString(coords[geometryIndex],feature.properties),featureIndex,multiFeatureIndex,geometryIndex))return!1}}})}exports.coordEach=coordEach,exports.coordReduce=function(geojson,callback,initialValue,excludeWrapCoord){var previousValue=initialValue;return coordEach(geojson,function(currentCoord,coordIndex,featureIndex,multiFeatureIndex,geometryIndex){previousValue=0===coordIndex&&void 0===initialValue?currentCoord:callback(previousValue,currentCoord,coordIndex,featureIndex,multiFeatureIndex,geometryIndex)},excludeWrapCoord),previousValue},exports.propEach=propEach,exports.propReduce=function(geojson,callback,initialValue){var previousValue=initialValue;return propEach(geojson,function(currentProperties,featureIndex){previousValue=0===featureIndex&&void 0===initialValue?currentProperties:callback(previousValue,currentProperties,featureIndex)}),previousValue},exports.featureEach=featureEach,exports.featureReduce=function(geojson,callback,initialValue){var previousValue=initialValue;return featureEach(geojson,function(currentFeature,featureIndex){previousValue=0===featureIndex&&void 0===initialValue?currentFeature:callback(previousValue,currentFeature,featureIndex)}),previousValue},exports.coordAll=function(geojson){var coords=[];return coordEach(geojson,function(coord){coords.push(coord)}),coords},exports.geomEach=geomEach,exports.geomReduce=function(geojson,callback,initialValue){var previousValue=initialValue;return geomEach(geojson,function(currentGeometry,featureIndex,featureProperties,featureBBox,featureId){previousValue=0===featureIndex&&void 0===initialValue?currentGeometry:callback(previousValue,currentGeometry,featureIndex,featureProperties,featureBBox,featureId)}),previousValue},exports.flattenEach=flattenEach,exports.flattenReduce=function(geojson,callback,initialValue){var previousValue=initialValue;return flattenEach(geojson,function(currentFeature,featureIndex,multiFeatureIndex){previousValue=0===featureIndex&&0===multiFeatureIndex&&void 0===initialValue?currentFeature:callback(previousValue,currentFeature,featureIndex,multiFeatureIndex)}),previousValue},exports.segmentEach=segmentEach,exports.segmentReduce=function(geojson,callback,initialValue){var previousValue=initialValue,started=!1;return segmentEach(geojson,function(currentSegment,featureIndex,multiFeatureIndex,geometryIndex,segmentIndex){previousValue=!1===started&&void 0===initialValue?currentSegment:callback(previousValue,currentSegment,featureIndex,multiFeatureIndex,geometryIndex,segmentIndex),started=!0}),previousValue},exports.lineEach=lineEach,exports.lineReduce=function(geojson,callback,initialValue){var previousValue=initialValue;return lineEach(geojson,function(currentLine,featureIndex,multiFeatureIndex,geometryIndex){previousValue=0===featureIndex&&void 0===initialValue?currentLine:callback(previousValue,currentLine,featureIndex,multiFeatureIndex,geometryIndex)}),previousValue},exports.findSegment=function(geojson,options){if(options=options||{},!helpers.isObject(options))throw new Error("options is invalid");var geometry,featureIndex=options.featureIndex||0,multiFeatureIndex=options.multiFeatureIndex||0,geometryIndex=options.geometryIndex||0,segmentIndex=options.segmentIndex||0,properties=options.properties;switch(geojson.type){case"FeatureCollection":featureIndex<0&&(featureIndex=geojson.features.length+featureIndex),properties=properties||geojson.features[featureIndex].properties,geometry=geojson.features[featureIndex].geometry;break;case"Feature":properties=properties||geojson.properties,geometry=geojson.geometry;break;case"Point":case"MultiPoint":return null;case"LineString":case"Polygon":case"MultiLineString":case"MultiPolygon":geometry=geojson;break;default:throw new Error("geojson is invalid")}if(null===geometry)return null;var coords=geometry.coordinates;switch(geometry.type){case"Point":case"MultiPoint":return null;case"LineString":return segmentIndex<0&&(segmentIndex=coords.length+segmentIndex-1),helpers.lineString([coords[segmentIndex],coords[segmentIndex+1]],properties,options);case"Polygon":return geometryIndex<0&&(geometryIndex=coords.length+geometryIndex),segmentIndex<0&&(segmentIndex=coords[geometryIndex].length+segmentIndex-1),helpers.lineString([coords[geometryIndex][segmentIndex],coords[geometryIndex][segmentIndex+1]],properties,options);case"MultiLineString":return multiFeatureIndex<0&&(multiFeatureIndex=coords.length+multiFeatureIndex),segmentIndex<0&&(segmentIndex=coords[multiFeatureIndex].length+segmentIndex-1),helpers.lineString([coords[multiFeatureIndex][segmentIndex],coords[multiFeatureIndex][segmentIndex+1]],properties,options);case"MultiPolygon":return multiFeatureIndex<0&&(multiFeatureIndex=coords.length+multiFeatureIndex),geometryIndex<0&&(geometryIndex=coords[multiFeatureIndex].length+geometryIndex),segmentIndex<0&&(segmentIndex=coords[multiFeatureIndex][geometryIndex].length-segmentIndex-1),helpers.lineString([coords[multiFeatureIndex][geometryIndex][segmentIndex],coords[multiFeatureIndex][geometryIndex][segmentIndex+1]],properties,options)}throw new Error("geojson is invalid")},exports.findPoint=function(geojson,options){if(options=options||{},!helpers.isObject(options))throw new Error("options is invalid");var geometry,featureIndex=options.featureIndex||0,multiFeatureIndex=options.multiFeatureIndex||0,geometryIndex=options.geometryIndex||0,coordIndex=options.coordIndex||0,properties=options.properties;switch(geojson.type){case"FeatureCollection":featureIndex<0&&(featureIndex=geojson.features.length+featureIndex),properties=properties||geojson.features[featureIndex].properties,geometry=geojson.features[featureIndex].geometry;break;case"Feature":properties=properties||geojson.properties,geometry=geojson.geometry;break;case"Point":case"MultiPoint":return null;case"LineString":case"Polygon":case"MultiLineString":case"MultiPolygon":geometry=geojson;break;default:throw new Error("geojson is invalid")}if(null===geometry)return null;var coords=geometry.coordinates;switch(geometry.type){case"Point":return helpers.point(coords,properties,options);case"MultiPoint":return multiFeatureIndex<0&&(multiFeatureIndex=coords.length+multiFeatureIndex),helpers.point(coords[multiFeatureIndex],properties,options);case"LineString":return coordIndex<0&&(coordIndex=coords.length+coordIndex),helpers.point(coords[coordIndex],properties,options);case"Polygon":return geometryIndex<0&&(geometryIndex=coords.length+geometryIndex),coordIndex<0&&(coordIndex=coords[geometryIndex].length+coordIndex),helpers.point(coords[geometryIndex][coordIndex],properties,options);case"MultiLineString":return multiFeatureIndex<0&&(multiFeatureIndex=coords.length+multiFeatureIndex),coordIndex<0&&(coordIndex=coords[multiFeatureIndex].length+coordIndex),helpers.point(coords[multiFeatureIndex][coordIndex],properties,options);case"MultiPolygon":return multiFeatureIndex<0&&(multiFeatureIndex=coords.length+multiFeatureIndex),geometryIndex<0&&(geometryIndex=coords[multiFeatureIndex].length+geometryIndex),coordIndex<0&&(coordIndex=coords[multiFeatureIndex][geometryIndex].length-coordIndex),helpers.point(coords[multiFeatureIndex][geometryIndex][coordIndex],properties,options)}throw new Error("geojson is invalid")}},{"@turf/helpers":23}],35:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var bearing_1=require("@turf/bearing"),distance_1=require("@turf/distance"),destination_1=require("@turf/destination"),line_intersect_1=require("@turf/line-intersect"),meta_1=require("@turf/meta"),helpers_1=require("@turf/helpers"),invariant_1=require("@turf/invariant");exports.default=function(lines,pt,options){void 0===options&&(options={});var closestPt=helpers_1.point([1/0,1/0],{dist:1/0}),length=0;return meta_1.flattenEach(lines,function(line){for(var coords=invariant_1.getCoords(line),i=0;i<coords.length-1;i++){var start=helpers_1.point(coords[i]);start.properties.dist=distance_1.default(pt,start,options);var stop_1=helpers_1.point(coords[i+1]);stop_1.properties.dist=distance_1.default(pt,stop_1,options);var sectionLength=distance_1.default(start,stop_1,options),heightDistance=Math.max(start.properties.dist,stop_1.properties.dist),direction=bearing_1.default(start,stop_1),perpendicularPt1=destination_1.default(pt,heightDistance,direction+90,options),perpendicularPt2=destination_1.default(pt,heightDistance,direction-90,options),intersect=line_intersect_1.default(helpers_1.lineString([perpendicularPt1.geometry.coordinates,perpendicularPt2.geometry.coordinates]),helpers_1.lineString([start.geometry.coordinates,stop_1.geometry.coordinates])),intersectPt=null;intersect.features.length>0&&((intersectPt=intersect.features[0]).properties.dist=distance_1.default(pt,intersectPt,options),intersectPt.properties.location=length+distance_1.default(start,intersectPt,options)),start.properties.dist<closestPt.properties.dist&&((closestPt=start).properties.index=i,closestPt.properties.location=length),stop_1.properties.dist<closestPt.properties.dist&&((closestPt=stop_1).properties.index=i+1,closestPt.properties.location=length+sectionLength),intersectPt&&intersectPt.properties.dist<closestPt.properties.dist&&((closestPt=intersectPt).properties.index=i),length+=sectionLength}}),closestPt}},{"@turf/bearing":3,"@turf/destination":21,"@turf/distance":22,"@turf/helpers":23,"@turf/invariant":24,"@turf/line-intersect":30,"@turf/meta":34}],36:[function(require,module,exports){"use strict";var invariant=require("@turf/invariant"),helpers=require("@turf/helpers");function polygonTangents(pt,polygon){var rtan,ltan,eprev,pointCoords=invariant.getCoords(pt),polyCoords=invariant.getCoords(polygon);switch(invariant.getType(polygon)){case"Polygon":rtan=polyCoords[0][0],ltan=polyCoords[0][0],eprev=isLeft(polyCoords[0][0],polyCoords[0][polyCoords[0].length-1],pointCoords);var out=processPolygon(polyCoords[0],pointCoords,eprev,void 0,rtan,ltan);rtan=out[0],ltan=out[1];break;case"MultiPolygon":rtan=polyCoords[0][0][0],ltan=polyCoords[0][0][0],eprev=isLeft(polyCoords[0][0][0],polyCoords[0][0][polyCoords[0][0].length-1],pointCoords),polyCoords.forEach(function(ring){var out=processPolygon(ring[0],pointCoords,eprev,void 0,rtan,ltan);rtan=out[0],ltan=out[1]})}return helpers.featureCollection([helpers.point(rtan),helpers.point(ltan)])}function processPolygon(polygonCoords,ptCoords,eprev,enext,rtan,ltan){for(var i=0;i<polygonCoords.length;i++){var currentCoords=polygonCoords[i],nextCoordPair=polygonCoords[i+1];i===polygonCoords.length-1&&(nextCoordPair=polygonCoords[0]),enext=isLeft(currentCoords,nextCoordPair,ptCoords),eprev<=0&&enext>0?isLeft(ptCoords,currentCoords,rtan)<0||(rtan=currentCoords):eprev>0&&enext<=0&&(isAbove(ptCoords,currentCoords,ltan)||(ltan=currentCoords)),eprev=enext}return[rtan,ltan]}function isAbove(point1,point2,point3){return isLeft(point1,point2,point3)>0}function isLeft(point1,point2,point3){return(point2[0]-point1[0])*(point3[1]-point1[1])-(point3[0]-point1[0])*(point2[1]-point1[1])}module.exports=polygonTangents,module.exports.default=polygonTangents},{"@turf/helpers":37,"@turf/invariant":38}],37:[function(require,module,exports){arguments[4][10][0].apply(exports,arguments)},{dup:10}],38:[function(require,module,exports){arguments[4][18][0].apply(exports,arguments)},{"@turf/helpers":37,dup:18}],39:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var helpers_1=require("@turf/helpers"),invariant_1=require("@turf/invariant");function polygonToLine(poly,options){void 0===options&&(options={});var geom=invariant_1.getGeom(poly);geom.type;return coordsToLine(geom.coordinates,options.properties?options.properties:"Feature"===poly.type?poly.properties:{})}function multiPolygonToLine(multiPoly,options){void 0===options&&(options={});var geom=invariant_1.getGeom(multiPoly),coords=(geom.type,geom.coordinates),properties=options.properties?options.properties:"Feature"===multiPoly.type?multiPoly.properties:{},lines=[];return coords.forEach(function(coord){lines.push(coordsToLine(coord,properties))}),helpers_1.featureCollection(lines)}function coordsToLine(coords,properties){return coords.length>1?helpers_1.multiLineString(coords,properties):helpers_1.lineString(coords[0],properties)}exports.default=function(poly,options){void 0===options&&(options={});var geom=invariant_1.getGeom(poly);switch(options.properties||"Feature"!==poly.type||(options.properties=poly.properties),geom.type){case"Polygon":return polygonToLine(geom,options);case"MultiPolygon":return multiPolygonToLine(geom,options);default:throw new Error("invalid poly")}},exports.polygonToLine=polygonToLine,exports.multiPolygonToLine=multiPolygonToLine,exports.coordsToLine=coordsToLine},{"@turf/helpers":23,"@turf/invariant":24}],40:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var helpers_1=require("@turf/helpers");function randomPosition(bbox){return Array.isArray(bbox)?coordInBBox(bbox):bbox&&bbox.bbox?coordInBBox(bbox.bbox):[360*rnd(),180*rnd()]}function rnd(){return Math.random()-.5}function coordInBBox(bbox){return[Math.random()*(bbox[2]-bbox[0])+bbox[0],Math.random()*(bbox[3]-bbox[1])+bbox[1]]}exports.randomPosition=randomPosition,exports.randomPoint=function(count,options){void 0===options&&(options={}),void 0!==count&&null!==count||(count=1);for(var features=[],i=0;i<count;i++)features.push(helpers_1.point(randomPosition(options.bbox)));return helpers_1.featureCollection(features)},exports.randomPolygon=function(count,options){void 0===options&&(options={}),void 0!==count&&null!==count||(count=1),helpers_1.isNumber(options.num_vertices)&&void 0!==options.num_vertices||(options.num_vertices=10),helpers_1.isNumber(options.max_radial_length)&&void 0!==options.max_radial_length||(options.max_radial_length=10);for(var features=[],_loop_1=function(i){var hub,vertices=[],circleOffsets=Array.apply(null,new Array(options.num_vertices+1)).map(Math.random);circleOffsets.forEach(function(cur,index,arr){arr[index]=index>0?cur+arr[index-1]:cur}),circleOffsets.forEach(function(cur){cur=2*cur*Math.PI/circleOffsets[circleOffsets.length-1];var radialScaler=Math.random();vertices.push([radialScaler*(options.max_radial_length||10)*Math.sin(cur),radialScaler*(options.max_radial_length||10)*Math.cos(cur)])}),vertices[vertices.length-1]=vertices[0],vertices=vertices.map((hub=randomPosition(options.bbox),function(cur){return[cur[0]+hub[0],cur[1]+hub[1]]})),features.push(helpers_1.polygon([vertices]))},i=0;i<count;i++)_loop_1();return helpers_1.featureCollection(features)},exports.randomLineString=function(count,options){if(void 0===options&&(options={}),options=options||{},!helpers_1.isObject(options))throw new Error("options is invalid");var bbox=options.bbox,num_vertices=options.num_vertices,max_length=options.max_length,max_rotation=options.max_rotation;void 0!==count&&null!==count||(count=1),(!helpers_1.isNumber(num_vertices)||void 0===num_vertices||num_vertices<2)&&(num_vertices=10),helpers_1.isNumber(max_length)&&void 0!==max_length||(max_length=1e-4),helpers_1.isNumber(max_rotation)&&void 0!==max_rotation||(max_rotation=Math.PI/8);for(var features=[],i=0;i<count;i++){for(var vertices=[randomPosition(bbox)],j=0;j<num_vertices-1;j++){var angle=(0===j?2*Math.random()*Math.PI:Math.tan((vertices[j][1]-vertices[j-1][1])/(vertices[j][0]-vertices[j-1][0])))+(Math.random()-.5)*max_rotation*2,distance=Math.random()*max_length;vertices.push([vertices[j][0]+distance*Math.cos(angle),vertices[j][1]+distance*Math.sin(angle)])}features.push(helpers_1.lineString(vertices))}return helpers_1.featureCollection(features)}},{"@turf/helpers":23}],41:[function(require,module,exports){"use strict";var invariant=require("@turf/invariant"),helpers=require("@turf/helpers");function rhumbBearing(start,end,options){if(options=options||{},!helpers.isObject(options))throw new Error("options is invalid");var bear360,final=options.final;if(!start)throw new Error("start point is required");if(!end)throw new Error("end point is required");return(bear360=final?calculateRhumbBearing(invariant.getCoord(end),invariant.getCoord(start)):calculateRhumbBearing(invariant.getCoord(start),invariant.getCoord(end)))>180?-(360-bear360):bear360}function calculateRhumbBearing(from,to){var phi1=helpers.degreesToRadians(from[1]),phi2=helpers.degreesToRadians(to[1]),deltaLambda=helpers.degreesToRadians(to[0]-from[0]);deltaLambda>Math.PI&&(deltaLambda-=2*Math.PI),deltaLambda<-Math.PI&&(deltaLambda+=2*Math.PI);var deltaPsi=Math.log(Math.tan(phi2/2+Math.PI/4)/Math.tan(phi1/2+Math.PI/4)),theta=Math.atan2(deltaLambda,deltaPsi);return(helpers.radiansToDegrees(theta)+360)%360}module.exports=rhumbBearing,module.exports.default=rhumbBearing},{"@turf/helpers":42,"@turf/invariant":43}],42:[function(require,module,exports){arguments[4][10][0].apply(exports,arguments)},{dup:10}],43:[function(require,module,exports){arguments[4][18][0].apply(exports,arguments)},{"@turf/helpers":42,dup:18}],44:[function(require,module,exports){"use strict";var helpers=require("@turf/helpers"),invariant=require("@turf/invariant");function rhumbDestination(origin,distance,bearing,options){if(options=options||{},!helpers.isObject(options))throw new Error("options is invalid");var units=options.units,properties=options.properties;if(!origin)throw new Error("origin is required");if(void 0===distance||null===distance)throw new Error("distance is required");if(void 0===bearing||null===bearing)throw new Error("bearing is required");if(!(distance>=0))throw new Error("distance must be greater than 0");var distanceInMeters=helpers.convertLength(distance,units,"meters"),coords=invariant.getCoord(origin),destination=function(origin,distance,bearing,radius){radius=void 0===radius?helpers.earthRadius:Number(radius);var delta=distance/radius,lambda1=origin[0]*Math.PI/180,phi1=helpers.degreesToRadians(origin[1]),theta=helpers.degreesToRadians(bearing),DeltaPhi=delta*Math.cos(theta),phi2=phi1+DeltaPhi;Math.abs(phi2)>Math.PI/2&&(phi2=phi2>0?Math.PI-phi2:-Math.PI-phi2);var DeltaPsi=Math.log(Math.tan(phi2/2+Math.PI/4)/Math.tan(phi1/2+Math.PI/4)),q=Math.abs(DeltaPsi)>1e-11?DeltaPhi/DeltaPsi:Math.cos(phi1),DeltaLambda=delta*Math.sin(theta)/q;return[(180*(lambda1+DeltaLambda)/Math.PI+540)%360-180,180*phi2/Math.PI]}(coords,distanceInMeters,bearing);return destination[0]+=destination[0]-coords[0]>180?-360:coords[0]-destination[0]>180?360:0,helpers.point(destination,properties)}module.exports=rhumbDestination,module.exports.default=rhumbDestination},{"@turf/helpers":45,"@turf/invariant":46}],45:[function(require,module,exports){arguments[4][10][0].apply(exports,arguments)},{dup:10}],46:[function(require,module,exports){arguments[4][18][0].apply(exports,arguments)},{"@turf/helpers":45,dup:18}],47:[function(require,module,exports){"use strict";var helpers=require("@turf/helpers"),invariant=require("@turf/invariant");function rhumbDistance(from,to,options){if(options=options||{},!helpers.isObject(options))throw new Error("options is invalid");var units=options.units;if(!from)throw new Error("from point is required");if(!to)throw new Error("to point is required");var origin=invariant.getCoord(from),destination=invariant.getCoord(to);destination[0]+=destination[0]-origin[0]>180?-360:origin[0]-destination[0]>180?360:0;var distanceInMeters=function(origin,destination,radius){var R=radius=void 0===radius?helpers.earthRadius:Number(radius),phi1=origin[1]*Math.PI/180,phi2=destination[1]*Math.PI/180,DeltaPhi=phi2-phi1,DeltaLambda=Math.abs(destination[0]-origin[0])*Math.PI/180;DeltaLambda>Math.PI&&(DeltaLambda-=2*Math.PI);var DeltaPsi=Math.log(Math.tan(phi2/2+Math.PI/4)/Math.tan(phi1/2+Math.PI/4)),q=Math.abs(DeltaPsi)>1e-11?DeltaPhi/DeltaPsi:Math.cos(phi1);return Math.sqrt(DeltaPhi*DeltaPhi+q*q*DeltaLambda*DeltaLambda)*R}(origin,destination);return helpers.convertLength(distanceInMeters,"meters",units)}module.exports=rhumbDistance,module.exports.default=rhumbDistance},{"@turf/helpers":48,"@turf/invariant":49}],48:[function(require,module,exports){arguments[4][10][0].apply(exports,arguments)},{dup:10}],49:[function(require,module,exports){arguments[4][18][0].apply(exports,arguments)},{"@turf/helpers":48,dup:18}],50:[function(require,module,exports){"use strict";function _interopDefault(ex){return ex&&"object"==typeof ex&&"default"in ex?ex.default:ex}var circle=_interopDefault(require("@turf/circle")),lineArc=_interopDefault(require("@turf/line-arc")),meta=require("@turf/meta"),helpers=require("@turf/helpers"),invariant=require("@turf/invariant");function sector(center,radius,bearing1,bearing2,options){if(options=options||{},!helpers.isObject(options))throw new Error("options is invalid");if(!center)throw new Error("center is required");if(void 0===bearing1||null===bearing1)throw new Error("bearing1 is required");if(void 0===bearing2||null===bearing2)throw new Error("bearing2 is required");if(!radius)throw new Error("radius is required");if("object"!=typeof options)throw new Error("options must be an object");if(convertAngleTo360(bearing1)===convertAngleTo360(bearing2))return circle(center,radius,options);var coords=invariant.getCoords(center),arc=lineArc(center,radius,bearing1,bearing2,options),sliceCoords=[[coords]];return meta.coordEach(arc,function(currentCoords){sliceCoords[0].push(currentCoords)}),sliceCoords[0].push(coords),helpers.polygon(sliceCoords)}function convertAngleTo360(alfa){var beta=alfa%360;return beta<0&&(beta+=360),beta}module.exports=sector,module.exports.default=sector},{"@turf/circle":15,"@turf/helpers":51,"@turf/invariant":52,"@turf/line-arc":26,"@turf/meta":53}],51:[function(require,module,exports){arguments[4][10][0].apply(exports,arguments)},{dup:10}],52:[function(require,module,exports){arguments[4][18][0].apply(exports,arguments)},{"@turf/helpers":51,dup:18}],53:[function(require,module,exports){arguments[4][11][0].apply(exports,arguments)},{"@turf/helpers":51,dup:11}],54:[function(require,module,exports){"use strict";function _interopDefault(ex){return ex&&"object"==typeof ex&&"default"in ex?ex.default:ex}var clone=_interopDefault(require("@turf/clone")),center=_interopDefault(require("@turf/center")),centroid=_interopDefault(require("@turf/centroid")),turfBBox=_interopDefault(require("@turf/bbox")),rhumbBearing=_interopDefault(require("@turf/rhumb-bearing")),rhumbDistance=_interopDefault(require("@turf/rhumb-distance")),rhumbDestination=_interopDefault(require("@turf/rhumb-destination")),meta=require("@turf/meta"),helpers=require("@turf/helpers"),invariant=require("@turf/invariant");function transformScale(geojson,factor,options){if(options=options||{},!helpers.isObject(options))throw new Error("options is invalid");var origin=options.origin,mutate=options.mutate;if(!geojson)throw new Error("geojson required");if("number"!=typeof factor||0===factor)throw new Error("invalid factor");var originIsPoint=Array.isArray(origin)||"object"==typeof origin;return!0!==mutate&&(geojson=clone(geojson)),"FeatureCollection"!==geojson.type||originIsPoint?scale(geojson,factor,origin):(meta.featureEach(geojson,function(feature,index){geojson.features[index]=scale(feature,factor,origin)}),geojson)}function scale(feature,factor,origin){var isPoint="Point"===invariant.getType(feature);return origin=function(geojson,origin){void 0!==origin&&null!==origin||(origin="centroid");if(Array.isArray(origin)||"object"==typeof origin)return invariant.getCoord(origin);var bbox=geojson.bbox?geojson.bbox:turfBBox(geojson),west=bbox[0],south=bbox[1],east=bbox[2],north=bbox[3];switch(origin){case"sw":case"southwest":case"westsouth":case"bottomleft":return helpers.point([west,south]);case"se":case"southeast":case"eastsouth":case"bottomright":return helpers.point([east,south]);case"nw":case"northwest":case"westnorth":case"topleft":return helpers.point([west,north]);case"ne":case"northeast":case"eastnorth":case"topright":return helpers.point([east,north]);case"center":return center(geojson);case void 0:case null:case"centroid":return centroid(geojson);default:throw new Error("invalid origin")}}(feature,origin),1===factor||isPoint?feature:(meta.coordEach(feature,function(coord){var originalDistance=rhumbDistance(origin,coord),bearing=rhumbBearing(origin,coord),newDistance=originalDistance*factor,newCoord=invariant.getCoords(rhumbDestination(origin,newDistance,bearing));coord[0]=newCoord[0],coord[1]=newCoord[1],3===coord.length&&(coord[2]*=factor)}),feature)}module.exports=transformScale,module.exports.default=transformScale},{"@turf/bbox":55,"@turf/center":8,"@turf/centroid":12,"@turf/clone":19,"@turf/helpers":56,"@turf/invariant":57,"@turf/meta":58,"@turf/rhumb-bearing":41,"@turf/rhumb-destination":44,"@turf/rhumb-distance":47}],55:[function(require,module,exports){arguments[4][9][0].apply(exports,arguments)},{"@turf/meta":58,dup:9}],56:[function(require,module,exports){arguments[4][10][0].apply(exports,arguments)},{dup:10}],57:[function(require,module,exports){arguments[4][18][0].apply(exports,arguments)},{"@turf/helpers":56,dup:18}],58:[function(require,module,exports){arguments[4][11][0].apply(exports,arguments)},{"@turf/helpers":56,dup:11}],59:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var martinez=require("martinez-polygon-clipping"),invariant_1=require("@turf/invariant"),helpers_1=require("@turf/helpers");exports.default=function(polygon1,polygon2,options){void 0===options&&(options={});var coords1=invariant_1.getGeom(polygon1).coordinates,coords2=invariant_1.getGeom(polygon2).coordinates,unioned=martinez.union(coords1,coords2);return 0===unioned.length?null:1===unioned.length?helpers_1.polygon(unioned[0],options.properties):helpers_1.multiPolygon(unioned,options.properties)}},{"@turf/helpers":23,"@turf/invariant":24,"martinez-polygon-clipping":75}],60:[function(require,module,exports){"use strict";var RBush=require("rbush"),Queue=require("tinyqueue"),pointInPolygon=require("point-in-polygon");const orient=require("robust-predicates/umd/orient2d.min.js").orient2d;function concaveman(points,concavity,lengthThreshold){concavity=Math.max(0,void 0===concavity?2:concavity),lengthThreshold=lengthThreshold||0;var hull=function(points){for(var left=points[0],top=points[0],right=points[0],bottom=points[0],i=0;i<points.length;i++){var p=points[i];p[0]<left[0]&&(left=p),p[0]>right[0]&&(right=p),p[1]<top[1]&&(top=p),p[1]>bottom[1]&&(bottom=p)}var cull=[left,top,right,bottom],filtered=cull.slice();for(i=0;i<points.length;i++)pointInPolygon(points[i],cull)||filtered.push(points[i]);return function(points){points.sort(compareByX);for(var lower=[],i=0;i<points.length;i++){for(;lower.length>=2&&cross(lower[lower.length-2],lower[lower.length-1],points[i])<=0;)lower.pop();lower.push(points[i])}for(var upper=[],ii=points.length-1;ii>=0;ii--){for(;upper.length>=2&&cross(upper[upper.length-2],upper[upper.length-1],points[ii])<=0;)upper.pop();upper.push(points[ii])}return upper.pop(),lower.pop(),lower.concat(upper)}(filtered)}(points),tree=new RBush(16);tree.toBBox=function(a){return{minX:a[0],minY:a[1],maxX:a[0],maxY:a[1]}},tree.compareMinX=function(a,b){return a[0]-b[0]},tree.compareMinY=function(a,b){return a[1]-b[1]},tree.load(points);for(var last,queue=[],i=0;i<hull.length;i++){var p=hull[i];tree.remove(p),last=insertNode(p,last),queue.push(last)}var segTree=new RBush(16);for(i=0;i<queue.length;i++)segTree.insert(updateBBox(queue[i]));for(var sqConcavity=concavity*concavity,sqLenThreshold=lengthThreshold*lengthThreshold;queue.length;){var node=queue.shift(),a=node.p,b=node.next.p,sqLen=getSqDist(a,b);if(!(sqLen<sqLenThreshold)){var maxSqLen=sqLen/sqConcavity;(p=findCandidate(tree,node.prev.p,a,b,node.next.next.p,maxSqLen,segTree))&&Math.min(getSqDist(p,a),getSqDist(p,b))<=maxSqLen&&(queue.push(node),queue.push(insertNode(p,node)),tree.remove(p),segTree.remove(node),segTree.insert(updateBBox(node)),segTree.insert(updateBBox(node.next)))}}node=last;var concave=[];do{concave.push(node.p),node=node.next}while(node!==last);return concave.push(node.p),concave}function findCandidate(tree,a,b,c,d,maxDist,segTree){for(var queue=new Queue([],compareDist),node=tree.data;node;){for(var i=0;i<node.children.length;i++){var child=node.children[i],dist=node.leaf?sqSegDist(child,b,c):sqSegBoxDist(b,c,child);dist>maxDist||queue.push({node:child,dist:dist})}for(;queue.length&&!queue.peek().node.children;){var item=queue.pop(),p=item.node,d0=sqSegDist(p,a,b),d1=sqSegDist(p,c,d);if(item.dist<d0&&item.dist<d1&&noIntersections(b,p,segTree)&&noIntersections(c,p,segTree))return p}(node=queue.pop())&&(node=node.node)}return null}function compareDist(a,b){return a.dist-b.dist}function sqSegBoxDist(a,b,bbox){if(inside(a,bbox)||inside(b,bbox))return 0;var d1=sqSegSegDist(a[0],a[1],b[0],b[1],bbox.minX,bbox.minY,bbox.maxX,bbox.minY);if(0===d1)return 0;var d2=sqSegSegDist(a[0],a[1],b[0],b[1],bbox.minX,bbox.minY,bbox.minX,bbox.maxY);if(0===d2)return 0;var d3=sqSegSegDist(a[0],a[1],b[0],b[1],bbox.maxX,bbox.minY,bbox.maxX,bbox.maxY);if(0===d3)return 0;var d4=sqSegSegDist(a[0],a[1],b[0],b[1],bbox.minX,bbox.maxY,bbox.maxX,bbox.maxY);return 0===d4?0:Math.min(d1,d2,d3,d4)}function inside(a,bbox){return a[0]>=bbox.minX&&a[0]<=bbox.maxX&&a[1]>=bbox.minY&&a[1]<=bbox.maxY}function noIntersections(a,b,segTree){for(var p1,q1,p2,q2,minX=Math.min(a[0],b[0]),minY=Math.min(a[1],b[1]),maxX=Math.max(a[0],b[0]),maxY=Math.max(a[1],b[1]),edges=segTree.search({minX:minX,minY:minY,maxX:maxX,maxY:maxY}),i=0;i<edges.length;i++)if(p1=edges[i].p,q1=edges[i].next.p,p2=a,p1!==(q2=b)&&q1!==p2&&cross(p1,q1,p2)>0!=cross(p1,q1,q2)>0&&cross(p2,q2,p1)>0!=cross(p2,q2,q1)>0)return!1;return!0}function cross(p1,p2,p3){return orient(p1[0],p1[1],p2[0],p2[1],p3[0],p3[1])}function updateBBox(node){var p1=node.p,p2=node.next.p;return node.minX=Math.min(p1[0],p2[0]),node.minY=Math.min(p1[1],p2[1]),node.maxX=Math.max(p1[0],p2[0]),node.maxY=Math.max(p1[1],p2[1]),node}function insertNode(p,prev){var node={p:p,prev:null,next:null,minX:0,minY:0,maxX:0,maxY:0};return prev?(node.next=prev.next,node.prev=prev,prev.next.prev=node,prev.next=node):(node.prev=node,node.next=node),node}function getSqDist(p1,p2){var dx=p1[0]-p2[0],dy=p1[1]-p2[1];return dx*dx+dy*dy}function sqSegDist(p,p1,p2){var x=p1[0],y=p1[1],dx=p2[0]-x,dy=p2[1]-y;if(0!==dx||0!==dy){var t=((p[0]-x)*dx+(p[1]-y)*dy)/(dx*dx+dy*dy);t>1?(x=p2[0],y=p2[1]):t>0&&(x+=dx*t,y+=dy*t)}return(dx=p[0]-x)*dx+(dy=p[1]-y)*dy}function sqSegSegDist(x0,y0,x1,y1,x2,y2,x3,y3){var sc,sN,tc,tN,ux=x1-x0,uy=y1-y0,vx=x3-x2,vy=y3-y2,wx=x0-x2,wy=y0-y2,a=ux*ux+uy*uy,b=ux*vx+uy*vy,c=vx*vx+vy*vy,d=ux*wx+uy*wy,e=vx*wx+vy*wy,D=a*c-b*b,sD=D,tD=D;0===D?(sN=0,sD=1,tN=e,tD=c):(tN=a*e-b*d,(sN=b*e-c*d)<0?(sN=0,tN=e,tD=c):sN>sD&&(sN=sD,tN=e+b,tD=c)),tN<0?(tN=0,-d<0?sN=0:-d>a?sN=sD:(sN=-d,sD=a)):tN>tD&&(tN=tD,-d+b<0?sN=0:-d+b>a?sN=sD:(sN=-d+b,sD=a)),sc=0===sN?0:sN/sD;var dx=(1-(tc=0===tN?0:tN/tD))*x2+tc*x3-((1-sc)*x0+sc*x1),dy=(1-tc)*y2+tc*y3-((1-sc)*y0+sc*y1);return dx*dx+dy*dy}function compareByX(a,b){return a[0]===b[0]?a[1]-b[1]:a[0]-b[0]}module.exports=concaveman,module.exports.default=concaveman},{"point-in-polygon":83,rbush:61,"robust-predicates/umd/orient2d.min.js":90,tinyqueue:91}],61:[function(require,module,exports){var t,i;t=this,i=function(){"use strict";function t(t,r,e,a,h){!function t(n,r,e,a,h){for(;a>e;){if(a-e>600){var o=a-e+1,s=r-e+1,l=Math.log(o),f=.5*Math.exp(2*l/3),u=.5*Math.sqrt(l*f*(o-f)/o)*(s-o/2<0?-1:1);t(n,r,Math.max(e,Math.floor(r-s*f/o+u)),Math.min(a,Math.floor(r+(o-s)*f/o+u)),h)}var p=n[r],d=e,x=a;for(i(n,e,r),h(n[a],p)>0&&i(n,e,a);d<x;){for(i(n,d,x),d++,x--;h(n[d],p)<0;)d++;for(;h(n[x],p)>0;)x--}0===h(n[e],p)?i(n,e,x):i(n,++x,a),x<=r&&(e=x+1),r<=x&&(a=x-1)}}(t,r,e||0,a||t.length-1,h||n)}function i(t,i,n){var r=t[i];t[i]=t[n],t[n]=r}function n(t,i){return t<i?-1:t>i?1:0}var r=function(t){void 0===t&&(t=9),this._maxEntries=Math.max(4,t),this._minEntries=Math.max(2,Math.ceil(.4*this._maxEntries)),this.clear()};function e(t,i,n){if(!n)return i.indexOf(t);for(var r=0;r<i.length;r++)if(n(t,i[r]))return r;return-1}function a(t,i){h(t,0,t.children.length,i,t)}function h(t,i,n,r,e){e||(e=p(null)),e.minX=1/0,e.minY=1/0,e.maxX=-1/0,e.maxY=-1/0;for(var a=i;a<n;a++){var h=t.children[a];o(e,t.leaf?r(h):h)}return e}function o(t,i){return t.minX=Math.min(t.minX,i.minX),t.minY=Math.min(t.minY,i.minY),t.maxX=Math.max(t.maxX,i.maxX),t.maxY=Math.max(t.maxY,i.maxY),t}function s(t,i){return t.minX-i.minX}function l(t,i){return t.minY-i.minY}function f(t){return(t.maxX-t.minX)*(t.maxY-t.minY)}function u(t){return t.maxX-t.minX+(t.maxY-t.minY)}function m(t,i){return t.minX<=i.minX&&t.minY<=i.minY&&i.maxX<=t.maxX&&i.maxY<=t.maxY}function c(t,i){return i.minX<=t.maxX&&i.minY<=t.maxY&&i.maxX>=t.minX&&i.maxY>=t.minY}function p(t){return{children:t,height:1,leaf:!0,minX:1/0,minY:1/0,maxX:-1/0,maxY:-1/0}}function d(i,n,r,e,a){for(var h=[n,r];h.length;)if(!((r=h.pop())-(n=h.pop())<=e)){var o=n+Math.ceil((r-n)/e/2)*e;t(i,o,n,r,a),h.push(n,o,o,r)}}return r.prototype.all=function(){return this._all(this.data,[])},r.prototype.search=function(t){var i=this.data,n=[];if(!c(t,i))return n;for(var r=this.toBBox,e=[];i;){for(var a=0;a<i.children.length;a++){var h=i.children[a],o=i.leaf?r(h):h;c(t,o)&&(i.leaf?n.push(h):m(t,o)?this._all(h,n):e.push(h))}i=e.pop()}return n},r.prototype.collides=function(t){var i=this.data;if(!c(t,i))return!1;for(var n=[];i;){for(var r=0;r<i.children.length;r++){var e=i.children[r],a=i.leaf?this.toBBox(e):e;if(c(t,a)){if(i.leaf||m(t,a))return!0;n.push(e)}}i=n.pop()}return!1},r.prototype.load=function(t){if(!t||!t.length)return this;if(t.length<this._minEntries){for(var i=0;i<t.length;i++)this.insert(t[i]);return this}var n=this._build(t.slice(),0,t.length-1,0);if(this.data.children.length)if(this.data.height===n.height)this._splitRoot(this.data,n);else{if(this.data.height<n.height){var r=this.data;this.data=n,n=r}this._insert(n,this.data.height-n.height-1,!0)}else this.data=n;return this},r.prototype.insert=function(t){return t&&this._insert(t,this.data.height-1),this},r.prototype.clear=function(){return this.data=p([]),this},r.prototype.remove=function(t,i){if(!t)return this;for(var n,r,a,h=this.data,o=this.toBBox(t),s=[],l=[];h||s.length;){if(h||(h=s.pop(),r=s[s.length-1],n=l.pop(),a=!0),h.leaf){var f=e(t,h.children,i);if(-1!==f)return h.children.splice(f,1),s.push(h),this._condense(s),this}a||h.leaf||!m(h,o)?r?(n++,h=r.children[n],a=!1):h=null:(s.push(h),l.push(n),n=0,r=h,h=h.children[0])}return this},r.prototype.toBBox=function(t){return t},r.prototype.compareMinX=function(t,i){return t.minX-i.minX},r.prototype.compareMinY=function(t,i){return t.minY-i.minY},r.prototype.toJSON=function(){return this.data},r.prototype.fromJSON=function(t){return this.data=t,this},r.prototype._all=function(t,i){for(var n=[];t;)t.leaf?i.push.apply(i,t.children):n.push.apply(n,t.children),t=n.pop();return i},r.prototype._build=function(t,i,n,r){var e,h=n-i+1,o=this._maxEntries;if(h<=o)return a(e=p(t.slice(i,n+1)),this.toBBox),e;r||(r=Math.ceil(Math.log(h)/Math.log(o)),o=Math.ceil(h/Math.pow(o,r-1))),(e=p([])).leaf=!1,e.height=r;var s=Math.ceil(h/o),l=s*Math.ceil(Math.sqrt(o));d(t,i,n,l,this.compareMinX);for(var f=i;f<=n;f+=l){var u=Math.min(f+l-1,n);d(t,f,u,s,this.compareMinY);for(var m=f;m<=u;m+=s){var c=Math.min(m+s-1,u);e.children.push(this._build(t,m,c,r-1))}}return a(e,this.toBBox),e},r.prototype._chooseSubtree=function(t,i,n,r){for(;r.push(i),!i.leaf&&r.length-1!==n;){for(var e=1/0,a=1/0,h=void 0,o=0;o<i.children.length;o++){var s=i.children[o],l=f(s),u=(m=t,c=s,(Math.max(c.maxX,m.maxX)-Math.min(c.minX,m.minX))*(Math.max(c.maxY,m.maxY)-Math.min(c.minY,m.minY))-l);u<a?(a=u,e=l<e?l:e,h=s):u===a&&l<e&&(e=l,h=s)}i=h||i.children[0]}var m,c;return i},r.prototype._insert=function(t,i,n){var r=n?t:this.toBBox(t),e=[],a=this._chooseSubtree(r,this.data,i,e);for(a.children.push(t),o(a,r);i>=0&&e[i].children.length>this._maxEntries;)this._split(e,i),i--;this._adjustParentBBoxes(r,e,i)},r.prototype._split=function(t,i){var n=t[i],r=n.children.length,e=this._minEntries;this._chooseSplitAxis(n,e,r);var h=this._chooseSplitIndex(n,e,r),o=p(n.children.splice(h,n.children.length-h));o.height=n.height,o.leaf=n.leaf,a(n,this.toBBox),a(o,this.toBBox),i?t[i-1].children.push(o):this._splitRoot(n,o)},r.prototype._splitRoot=function(t,i){this.data=p([t,i]),this.data.height=t.height+1,this.data.leaf=!1,a(this.data,this.toBBox)},r.prototype._chooseSplitIndex=function(t,i,n){for(var r,e,a,o,s,l,u,m=1/0,c=1/0,p=i;p<=n-i;p++){var d=h(t,0,p,this.toBBox),x=h(t,p,n,this.toBBox),v=(e=d,a=x,o=void 0,s=void 0,l=void 0,u=void 0,o=Math.max(e.minX,a.minX),s=Math.max(e.minY,a.minY),l=Math.min(e.maxX,a.maxX),u=Math.min(e.maxY,a.maxY),Math.max(0,l-o)*Math.max(0,u-s)),M=f(d)+f(x);v<m?(m=v,r=p,c=M<c?M:c):v===m&&M<c&&(c=M,r=p)}return r||n-i},r.prototype._chooseSplitAxis=function(t,i,n){var r=t.leaf?this.compareMinX:s,e=t.leaf?this.compareMinY:l;this._allDistMargin(t,i,n,r)<this._allDistMargin(t,i,n,e)&&t.children.sort(r)},r.prototype._allDistMargin=function(t,i,n,r){t.children.sort(r);for(var e=this.toBBox,a=h(t,0,i,e),s=h(t,n-i,n,e),l=u(a)+u(s),f=i;f<n-i;f++){var m=t.children[f];o(a,t.leaf?e(m):m),l+=u(a)}for(var c=n-i-1;c>=i;c--){var p=t.children[c];o(s,t.leaf?e(p):p),l+=u(s)}return l},r.prototype._adjustParentBBoxes=function(t,i,n){for(var r=n;r>=0;r--)o(i[r],t)},r.prototype._condense=function(t){for(var i=t.length-1,n=void 0;i>=0;i--)0===t[i].children.length?i>0?(n=t[i-1].children).splice(n.indexOf(t[i]),1):this.clear():a(t[i],this.toBBox)},r},"object"==typeof exports&&void 0!==module?module.exports=i():(t=t||self).RBush=i()},{}],62:[function(require,module,exports){var objectKeys=require("object-keys"),isArguments=require("is-arguments"),is=require("object-is"),isRegex=require("is-regex"),flags=require("regexp.prototype.flags"),isDate=require("is-date-object"),getTime=Date.prototype.getTime;function deepEqual(actual,expected,options){var opts=options||{};return!(opts.strict?!is(actual,expected):actual!==expected)||(!actual||!expected||"object"!=typeof actual&&"object"!=typeof expected?opts.strict?is(actual,expected):actual==expected:function(a,b,opts){var i,key;if(typeof a!=typeof b)return!1;if(isUndefinedOrNull(a)||isUndefinedOrNull(b))return!1;if(a.prototype!==b.prototype)return!1;if(isArguments(a)!==isArguments(b))return!1;var aIsRegex=isRegex(a),bIsRegex=isRegex(b);if(aIsRegex!==bIsRegex)return!1;if(aIsRegex||bIsRegex)return a.source===b.source&&flags(a)===flags(b);if(isDate(a)&&isDate(b))return getTime.call(a)===getTime.call(b);var aIsBuffer=isBuffer(a),bIsBuffer=isBuffer(b);if(aIsBuffer!==bIsBuffer)return!1;if(aIsBuffer||bIsBuffer){if(a.length!==b.length)return!1;for(i=0;i<a.length;i++)if(a[i]!==b[i])return!1;return!0}if(typeof a!=typeof b)return!1;try{var ka=objectKeys(a),kb=objectKeys(b)}catch(e){return!1}if(ka.length!==kb.length)return!1;for(ka.sort(),kb.sort(),i=ka.length-1;i>=0;i--)if(ka[i]!=kb[i])return!1;for(i=ka.length-1;i>=0;i--)if(key=ka[i],!deepEqual(a[key],b[key],opts))return!1;return!0}(actual,expected,opts))}function isUndefinedOrNull(value){return null===value||void 0===value}function isBuffer(x){return!(!x||"object"!=typeof x||"number"!=typeof x.length)&&("function"==typeof x.copy&&"function"==typeof x.slice&&!(x.length>0&&"number"!=typeof x[0]))}module.exports=deepEqual},{"is-arguments":72,"is-date-object":73,"is-regex":74,"object-is":77,"object-keys":81,"regexp.prototype.flags":87}],63:[function(require,module,exports){"use strict";var keys=require("object-keys"),hasSymbols="function"==typeof Symbol&&"symbol"==typeof Symbol("foo"),toStr=Object.prototype.toString,concat=Array.prototype.concat,origDefineProperty=Object.defineProperty,supportsDescriptors=origDefineProperty&&function(){var obj={};try{for(var _ in origDefineProperty(obj,"x",{enumerable:!1,value:obj}),obj)return!1;return obj.x===obj}catch(e){return!1}}(),defineProperty=function(object,name,value,predicate){var fn;name in object&&("function"!=typeof(fn=predicate)||"[object Function]"!==toStr.call(fn)||!predicate())||(supportsDescriptors?origDefineProperty(object,name,{configurable:!0,enumerable:!1,value:value,writable:!0}):object[name]=value)},defineProperties=function(object,map){var predicates=arguments.length>2?arguments[2]:{},props=keys(map);hasSymbols&&(props=concat.call(props,Object.getOwnPropertySymbols(map)));for(var i=0;i<props.length;i+=1)defineProperty(object,props[i],map[props[i]],predicates[props[i]])};defineProperties.supportsDescriptors=!!supportsDescriptors,module.exports=defineProperties},{"object-keys":81}],64:[function(require,module,exports){"use strict";var $TypeError=TypeError,$gOPD=Object.getOwnPropertyDescriptor;if($gOPD)try{$gOPD({},"")}catch(e){$gOPD=null}var throwTypeError=function(){throw new $TypeError},ThrowTypeError=$gOPD?function(){try{return arguments.callee,throwTypeError}catch(calleeThrows){try{return $gOPD(arguments,"callee").get}catch(gOPDthrows){return throwTypeError}}}():throwTypeError,hasSymbols=require("has-symbols")(),getProto=Object.getPrototypeOf||function(x){return x.__proto__},asyncGenIterator=void 0,TypedArray="undefined"==typeof Uint8Array?void 0:getProto(Uint8Array),INTRINSICS={"%Array%":Array,"%ArrayBuffer%":"undefined"==typeof ArrayBuffer?void 0:ArrayBuffer,"%ArrayBufferPrototype%":"undefined"==typeof ArrayBuffer?void 0:ArrayBuffer.prototype,"%ArrayIteratorPrototype%":hasSymbols?getProto([][Symbol.iterator]()):void 0,"%ArrayPrototype%":Array.prototype,"%ArrayProto_entries%":Array.prototype.entries,"%ArrayProto_forEach%":Array.prototype.forEach,"%ArrayProto_keys%":Array.prototype.keys,"%ArrayProto_values%":Array.prototype.values,"%AsyncFromSyncIteratorPrototype%":void 0,"%AsyncFunction%":void 0,"%AsyncFunctionPrototype%":void 0,"%AsyncGenerator%":void 0,"%AsyncGeneratorFunction%":void 0,"%AsyncGeneratorPrototype%":void 0,"%AsyncIteratorPrototype%":asyncGenIterator&&hasSymbols&&Symbol.asyncIterator?asyncGenIterator[Symbol.asyncIterator]():void 0,"%Atomics%":"undefined"==typeof Atomics?void 0:Atomics,"%Boolean%":Boolean,"%BooleanPrototype%":Boolean.prototype,"%DataView%":"undefined"==typeof DataView?void 0:DataView,"%DataViewPrototype%":"undefined"==typeof DataView?void 0:DataView.prototype,"%Date%":Date,"%DatePrototype%":Date.prototype,"%decodeURI%":decodeURI,"%decodeURIComponent%":decodeURIComponent,"%encodeURI%":encodeURI,"%encodeURIComponent%":encodeURIComponent,"%Error%":Error,"%ErrorPrototype%":Error.prototype,"%eval%":eval,"%EvalError%":EvalError,"%EvalErrorPrototype%":EvalError.prototype,"%Float32Array%":"undefined"==typeof Float32Array?void 0:Float32Array,"%Float32ArrayPrototype%":"undefined"==typeof Float32Array?void 0:Float32Array.prototype,"%Float64Array%":"undefined"==typeof Float64Array?void 0:Float64Array,"%Float64ArrayPrototype%":"undefined"==typeof Float64Array?void 0:Float64Array.prototype,"%Function%":Function,"%FunctionPrototype%":Function.prototype,"%Generator%":void 0,"%GeneratorFunction%":void 0,"%GeneratorPrototype%":void 0,"%Int8Array%":"undefined"==typeof Int8Array?void 0:Int8Array,"%Int8ArrayPrototype%":"undefined"==typeof Int8Array?void 0:Int8Array.prototype,"%Int16Array%":"undefined"==typeof Int16Array?void 0:Int16Array,"%Int16ArrayPrototype%":"undefined"==typeof Int16Array?void 0:Int8Array.prototype,"%Int32Array%":"undefined"==typeof Int32Array?void 0:Int32Array,"%Int32ArrayPrototype%":"undefined"==typeof Int32Array?void 0:Int32Array.prototype,"%isFinite%":isFinite,"%isNaN%":isNaN,"%IteratorPrototype%":hasSymbols?getProto(getProto([][Symbol.iterator]())):void 0,"%JSON%":"object"==typeof JSON?JSON:void 0,"%JSONParse%":"object"==typeof JSON?JSON.parse:void 0,"%Map%":"undefined"==typeof Map?void 0:Map,"%MapIteratorPrototype%":"undefined"!=typeof Map&&hasSymbols?getProto((new Map)[Symbol.iterator]()):void 0,"%MapPrototype%":"undefined"==typeof Map?void 0:Map.prototype,"%Math%":Math,"%Number%":Number,"%NumberPrototype%":Number.prototype,"%Object%":Object,"%ObjectPrototype%":Object.prototype,"%ObjProto_toString%":Object.prototype.toString,"%ObjProto_valueOf%":Object.prototype.valueOf,"%parseFloat%":parseFloat,"%parseInt%":parseInt,"%Promise%":"undefined"==typeof Promise?void 0:Promise,"%PromisePrototype%":"undefined"==typeof Promise?void 0:Promise.prototype,"%PromiseProto_then%":"undefined"==typeof Promise?void 0:Promise.prototype.then,"%Promise_all%":"undefined"==typeof Promise?void 0:Promise.all,"%Promise_reject%":"undefined"==typeof Promise?void 0:Promise.reject,"%Promise_resolve%":"undefined"==typeof Promise?void 0:Promise.resolve,"%Proxy%":"undefined"==typeof Proxy?void 0:Proxy,"%RangeError%":RangeError,"%RangeErrorPrototype%":RangeError.prototype,"%ReferenceError%":ReferenceError,"%ReferenceErrorPrototype%":ReferenceError.prototype,"%Reflect%":"undefined"==typeof Reflect?void 0:Reflect,"%RegExp%":RegExp,"%RegExpPrototype%":RegExp.prototype,"%Set%":"undefined"==typeof Set?void 0:Set,"%SetIteratorPrototype%":"undefined"!=typeof Set&&hasSymbols?getProto((new Set)[Symbol.iterator]()):void 0,"%SetPrototype%":"undefined"==typeof Set?void 0:Set.prototype,"%SharedArrayBuffer%":"undefined"==typeof SharedArrayBuffer?void 0:SharedArrayBuffer,"%SharedArrayBufferPrototype%":"undefined"==typeof SharedArrayBuffer?void 0:SharedArrayBuffer.prototype,"%String%":String,"%StringIteratorPrototype%":hasSymbols?getProto(""[Symbol.iterator]()):void 0,"%StringPrototype%":String.prototype,"%Symbol%":hasSymbols?Symbol:void 0,"%SymbolPrototype%":hasSymbols?Symbol.prototype:void 0,"%SyntaxError%":SyntaxError,"%SyntaxErrorPrototype%":SyntaxError.prototype,"%ThrowTypeError%":ThrowTypeError,"%TypedArray%":TypedArray,"%TypedArrayPrototype%":TypedArray?TypedArray.prototype:void 0,"%TypeError%":$TypeError,"%TypeErrorPrototype%":$TypeError.prototype,"%Uint8Array%":"undefined"==typeof Uint8Array?void 0:Uint8Array,"%Uint8ArrayPrototype%":"undefined"==typeof Uint8Array?void 0:Uint8Array.prototype,"%Uint8ClampedArray%":"undefined"==typeof Uint8ClampedArray?void 0:Uint8ClampedArray,"%Uint8ClampedArrayPrototype%":"undefined"==typeof Uint8ClampedArray?void 0:Uint8ClampedArray.prototype,"%Uint16Array%":"undefined"==typeof Uint16Array?void 0:Uint16Array,"%Uint16ArrayPrototype%":"undefined"==typeof Uint16Array?void 0:Uint16Array.prototype,"%Uint32Array%":"undefined"==typeof Uint32Array?void 0:Uint32Array,"%Uint32ArrayPrototype%":"undefined"==typeof Uint32Array?void 0:Uint32Array.prototype,"%URIError%":URIError,"%URIErrorPrototype%":URIError.prototype,"%WeakMap%":"undefined"==typeof WeakMap?void 0:WeakMap,"%WeakMapPrototype%":"undefined"==typeof WeakMap?void 0:WeakMap.prototype,"%WeakSet%":"undefined"==typeof WeakSet?void 0:WeakSet,"%WeakSetPrototype%":"undefined"==typeof WeakSet?void 0:WeakSet.prototype},$replace=require("function-bind").call(Function.call,String.prototype.replace),rePropName=/[^%.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|%$))/g,reEscapeChar=/\\(\\)?/g;module.exports=function(name,allowMissing){if("string"!=typeof name||0===name.length)throw new TypeError("intrinsic name must be a non-empty string");if(arguments.length>1&&"boolean"!=typeof allowMissing)throw new TypeError('"allowMissing" argument must be a boolean');for(var result,parts=(result=[],$replace(name,rePropName,function(match,number,quote,subString){result[result.length]=quote?$replace(subString,reEscapeChar,"$1"):number||match}),result),value=function(name,allowMissing){if(!(name in INTRINSICS))throw new SyntaxError("intrinsic "+name+" does not exist!");if(void 0===INTRINSICS[name]&&!allowMissing)throw new $TypeError("intrinsic "+name+" exists, but is not available. Please file an issue!");return INTRINSICS[name]}("%"+(parts.length>0?parts[0]:"")+"%",allowMissing),i=1;i<parts.length;i+=1)if(null!=value)if($gOPD&&i+1>=parts.length){var desc=$gOPD(value,parts[i]);if(!(allowMissing||parts[i]in value))throw new $TypeError("base intrinsic for "+name+" exists, but the property is not available.");value=desc?desc.get||desc.value:value[parts[i]]}else value=value[parts[i]];return value}},{"function-bind":67,"has-symbols":70}],65:[function(require,module,exports){"use strict";var bind=require("function-bind"),GetIntrinsic=require("../GetIntrinsic"),$apply=GetIntrinsic("%Function.prototype.apply%"),$call=GetIntrinsic("%Function.prototype.call%"),$reflectApply=GetIntrinsic("%Reflect.apply%",!0)||bind.call($call,$apply);module.exports=function(){return $reflectApply(bind,$call,arguments)},module.exports.apply=function(){return $reflectApply(bind,$apply,arguments)}},{"../GetIntrinsic":64,"function-bind":67}],66:[function(require,module,exports){"use strict";var slice=Array.prototype.slice,toStr=Object.prototype.toString;module.exports=function(that){var target=this;if("function"!=typeof target||"[object Function]"!==toStr.call(target))throw new TypeError("Function.prototype.bind called on incompatible "+target);for(var bound,args=slice.call(arguments,1),boundLength=Math.max(0,target.length-args.length),boundArgs=[],i=0;i<boundLength;i++)boundArgs.push("$"+i);if(bound=Function("binder","return function ("+boundArgs.join(",")+"){ return binder.apply(this,arguments); }")(function(){if(this instanceof bound){var result=target.apply(this,args.concat(slice.call(arguments)));return Object(result)===result?result:this}return target.apply(that,args.concat(slice.call(arguments)))}),target.prototype){var Empty=function(){};Empty.prototype=target.prototype,bound.prototype=new Empty,Empty.prototype=null}return bound}},{}],67:[function(require,module,exports){"use strict";var implementation=require("./implementation");module.exports=Function.prototype.bind||implementation},{"./implementation":66}],68:[function(require,module,exports){var deepEqual=require("deep-equal"),Equality=function(opt){this.precision=opt&&opt.precision?opt.precision:17,this.direction=!(!opt||!opt.direction)&&opt.direction,this.pseudoNode=!(!opt||!opt.pseudoNode)&&opt.pseudoNode,this.objectComparator=opt&&opt.objectComparator?opt.objectComparator:objectComparator};function explode(g){return g.coordinates.map(function(part){return{type:g.type.replace("Multi",""),coordinates:part}})}function sameLength(g1,g2){return g1.hasOwnProperty("coordinates")?g1.coordinates.length===g2.coordinates.length:g1.length===g2.length}function objectComparator(obj1,obj2){return deepEqual(obj1,obj2,{strict:!0})}Equality.prototype.compare=function(g1,g2){if(g1.type!==g2.type||!sameLength(g1,g2))return!1;switch(g1.type){case"Point":return this.compareCoord(g1.coordinates,g2.coordinates);case"LineString":return this.compareLine(g1.coordinates,g2.coordinates,0,!1);case"Polygon":return this.comparePolygon(g1,g2);case"Feature":return this.compareFeature(g1,g2);default:if(0===g1.type.indexOf("Multi")){var context=this,g1s=explode(g1),g2s=explode(g2);return g1s.every(function(g1part){return this.some(function(g2part){return context.compare(g1part,g2part)})},g2s)}}return!1},Equality.prototype.compareCoord=function(c1,c2){if(c1.length!==c2.length)return!1;for(var i=0;i<c1.length;i++)if(c1[i].toFixed(this.precision)!==c2[i].toFixed(this.precision))return!1;return!0},Equality.prototype.compareLine=function(path1,path2,ind,isPoly){if(!sameLength(path1,path2))return!1;var p1=this.pseudoNode?path1:this.removePseudo(path1),p2=this.pseudoNode?path2:this.removePseudo(path2);if(!isPoly||this.compareCoord(p1[0],p2[0])||(p2=this.fixStartIndex(p2,p1))){var sameDirection=this.compareCoord(p1[ind],p2[ind]);return this.direction||sameDirection?this.comparePath(p1,p2):!!this.compareCoord(p1[ind],p2[p2.length-(1+ind)])&&this.comparePath(p1.slice().reverse(),p2)}},Equality.prototype.fixStartIndex=function(sourcePath,targetPath){for(var correctPath,ind=-1,i=0;i<sourcePath.length;i++)if(this.compareCoord(sourcePath[i],targetPath[0])){ind=i;break}return ind>=0&&(correctPath=[].concat(sourcePath.slice(ind,sourcePath.length),sourcePath.slice(1,ind+1))),correctPath},Equality.prototype.comparePath=function(p1,p2){var cont=this;return p1.every(function(c,i){return cont.compareCoord(c,this[i])},p2)},Equality.prototype.comparePolygon=function(g1,g2){if(this.compareLine(g1.coordinates[0],g2.coordinates[0],1,!0)){var holes1=g1.coordinates.slice(1,g1.coordinates.length),holes2=g2.coordinates.slice(1,g2.coordinates.length),cont=this;return holes1.every(function(h1){return this.some(function(h2){return cont.compareLine(h1,h2,1,!0)})},holes2)}return!1},Equality.prototype.compareFeature=function(g1,g2){return!(g1.id!==g2.id||!this.objectComparator(g1.properties,g2.properties)||!this.compareBBox(g1,g2))&&this.compare(g1.geometry,g2.geometry)},Equality.prototype.compareBBox=function(g1,g2){return!!(!g1.bbox&&!g2.bbox||g1.bbox&&g2.bbox&&this.compareCoord(g1.bbox,g2.bbox))},Equality.prototype.removePseudo=function(path){return path},module.exports=Equality},{"deep-equal":62}],69:[function(require,module,exports){var rbush=require("rbush"),helpers=require("@turf/helpers"),meta=require("@turf/meta"),turfBBox=require("@turf/bbox").default,featureEach=meta.featureEach,featureCollection=(meta.coordEach,helpers.polygon,helpers.featureCollection);function geojsonRbush(maxEntries){var tree=rbush(maxEntries);return tree.insert=function(feature){if("Feature"!==feature.type)throw new Error("invalid feature");return feature.bbox=feature.bbox?feature.bbox:turfBBox(feature),rbush.prototype.insert.call(this,feature)},tree.load=function(features){var load=[];return Array.isArray(features)?features.forEach(function(feature){if("Feature"!==feature.type)throw new Error("invalid features");feature.bbox=feature.bbox?feature.bbox:turfBBox(feature),load.push(feature)}):featureEach(features,function(feature){if("Feature"!==feature.type)throw new Error("invalid features");feature.bbox=feature.bbox?feature.bbox:turfBBox(feature),load.push(feature)}),rbush.prototype.load.call(this,load)},tree.remove=function(feature,equals){if("Feature"!==feature.type)throw new Error("invalid feature");return feature.bbox=feature.bbox?feature.bbox:turfBBox(feature),rbush.prototype.remove.call(this,feature,equals)},tree.clear=function(){return rbush.prototype.clear.call(this)},tree.search=function(geojson){var features=rbush.prototype.search.call(this,this.toBBox(geojson));return featureCollection(features)},tree.collides=function(geojson){return rbush.prototype.collides.call(this,this.toBBox(geojson))},tree.all=function(){var features=rbush.prototype.all.call(this);return featureCollection(features)},tree.toJSON=function(){return rbush.prototype.toJSON.call(this)},tree.fromJSON=function(json){return rbush.prototype.fromJSON.call(this,json)},tree.toBBox=function(geojson){var bbox;if(geojson.bbox)bbox=geojson.bbox;else if(Array.isArray(geojson)&&4===geojson.length)bbox=geojson;else if(Array.isArray(geojson)&&6===geojson.length)bbox=[geojson[0],geojson[1],geojson[3],geojson[4]];else if("Feature"===geojson.type)bbox=turfBBox(geojson);else{if("FeatureCollection"!==geojson.type)throw new Error("invalid geojson");bbox=turfBBox(geojson)}return{minX:bbox[0],minY:bbox[1],maxX:bbox[2],maxY:bbox[3]}},tree}module.exports=geojsonRbush,module.exports.default=geojsonRbush},{"@turf/bbox":2,"@turf/helpers":23,"@turf/meta":34,rbush:85}],70:[function(require,module,exports){(function(global){"use strict";var origSymbol=global.Symbol,hasSymbolSham=require("./shams");module.exports=function(){return"function"==typeof origSymbol&&("function"==typeof Symbol&&("symbol"==typeof origSymbol("foo")&&("symbol"==typeof Symbol("bar")&&hasSymbolSham())))}}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{"./shams":71}],71:[function(require,module,exports){"use strict";module.exports=function(){if("function"!=typeof Symbol||"function"!=typeof Object.getOwnPropertySymbols)return!1;if("symbol"==typeof Symbol.iterator)return!0;var obj={},sym=Symbol("test"),symObj=Object(sym);if("string"==typeof sym)return!1;if("[object Symbol]"!==Object.prototype.toString.call(sym))return!1;if("[object Symbol]"!==Object.prototype.toString.call(symObj))return!1;for(sym in obj[sym]=42,obj)return!1;if("function"==typeof Object.keys&&0!==Object.keys(obj).length)return!1;if("function"==typeof Object.getOwnPropertyNames&&0!==Object.getOwnPropertyNames(obj).length)return!1;var syms=Object.getOwnPropertySymbols(obj);if(1!==syms.length||syms[0]!==sym)return!1;if(!Object.prototype.propertyIsEnumerable.call(obj,sym))return!1;if("function"==typeof Object.getOwnPropertyDescriptor){var descriptor=Object.getOwnPropertyDescriptor(obj,sym);if(42!==descriptor.value||!0!==descriptor.enumerable)return!1}return!0}},{}],72:[function(require,module,exports){"use strict";var hasToStringTag="function"==typeof Symbol&&"symbol"==typeof Symbol.toStringTag,toStr=Object.prototype.toString,isStandardArguments=function(value){return!(hasToStringTag&&value&&"object"==typeof value&&Symbol.toStringTag in value)&&"[object Arguments]"===toStr.call(value)},isLegacyArguments=function(value){return!!isStandardArguments(value)||null!==value&&"object"==typeof value&&"number"==typeof value.length&&value.length>=0&&"[object Array]"!==toStr.call(value)&&"[object Function]"===toStr.call(value.callee)},supportsStandardArguments=function(){return isStandardArguments(arguments)}();isStandardArguments.isLegacyArguments=isLegacyArguments,module.exports=supportsStandardArguments?isStandardArguments:isLegacyArguments},{}],73:[function(require,module,exports){"use strict";var getDay=Date.prototype.getDay,toStr=Object.prototype.toString,hasToStringTag="function"==typeof Symbol&&"symbol"==typeof Symbol.toStringTag;module.exports=function(value){return"object"==typeof value&&null!==value&&(hasToStringTag?function(value){try{return getDay.call(value),!0}catch(e){return!1}}(value):"[object Date]"===toStr.call(value))}},{}],74:[function(require,module,exports){"use strict";var regexExec,isRegexMarker,badStringifier,hasToStringTag=require("has-symbols")()&&"symbol"==typeof Symbol.toStringTag;if(hasToStringTag){regexExec=Function.call.bind(RegExp.prototype.exec),isRegexMarker={};var throwRegexMarker=function(){throw isRegexMarker};badStringifier={toString:throwRegexMarker,valueOf:throwRegexMarker},"symbol"==typeof Symbol.toPrimitive&&(badStringifier[Symbol.toPrimitive]=throwRegexMarker)}var toStr=Object.prototype.toString;module.exports=hasToStringTag?function(value){if(!value||"object"!=typeof value)return!1;try{regexExec(value,badStringifier)}catch(e){return e===isRegexMarker}}:function(value){return!(!value||"object"!=typeof value&&"function"!=typeof value)&&"[object RegExp]"===toStr.call(value)}},{"has-symbols":70}],75:[function(require,module,exports){(function(exports){"use strict";function DEFAULT_COMPARE(a,b){return a>b?1:a<b?-1:0}var SplayTree=function(compare,noDuplicates){void 0===compare&&(compare=DEFAULT_COMPARE),void 0===noDuplicates&&(noDuplicates=!1),this._compare=compare,this._root=null,this._size=0,this._noDuplicates=!!noDuplicates},prototypeAccessors={size:{configurable:!0}};SplayTree.prototype.rotateLeft=function(x){var y=x.right;y&&(x.right=y.left,y.left&&(y.left.parent=x),y.parent=x.parent),x.parent?x===x.parent.left?x.parent.left=y:x.parent.right=y:this._root=y,y&&(y.left=x),x.parent=y},SplayTree.prototype.rotateRight=function(x){var y=x.left;y&&(x.left=y.right,y.right&&(y.right.parent=x),y.parent=x.parent),x.parent?x===x.parent.left?x.parent.left=y:x.parent.right=y:this._root=y,y&&(y.right=x),x.parent=y},SplayTree.prototype._splay=function(x){for(;x.parent;){var p=x.parent;p.parent?p.left===x&&p.parent.left===p?(this.rotateRight(p.parent),this.rotateRight(p)):p.right===x&&p.parent.right===p?(this.rotateLeft(p.parent),this.rotateLeft(p)):p.left===x&&p.parent.right===p?(this.rotateRight(p),this.rotateLeft(p)):(this.rotateLeft(p),this.rotateRight(p)):p.left===x?this.rotateRight(p):this.rotateLeft(p)}},SplayTree.prototype.splay=function(x){for(var p,gp,ggp,l,r;x.parent;)(gp=(p=x.parent).parent)&&gp.parent?((ggp=gp.parent).left===gp?ggp.left=x:ggp.right=x,x.parent=ggp):(x.parent=null,this._root=x),l=x.left,r=x.right,x===p.left?(gp&&(gp.left===p?(p.right?(gp.left=p.right,gp.left.parent=gp):gp.left=null,p.right=gp,gp.parent=p):(l?(gp.right=l,l.parent=gp):gp.right=null,x.left=gp,gp.parent=x)),r?(p.left=r,r.parent=p):p.left=null,x.right=p,p.parent=x):(gp&&(gp.right===p?(p.left?(gp.right=p.left,gp.right.parent=gp):gp.right=null,p.left=gp,gp.parent=p):(r?(gp.left=r,r.parent=gp):gp.left=null,x.right=gp,gp.parent=x)),l?(p.right=l,l.parent=p):p.right=null,x.left=p,p.parent=x)},SplayTree.prototype.replace=function(u,v){u.parent?u===u.parent.left?u.parent.left=v:u.parent.right=v:this._root=v,v&&(v.parent=u.parent)},SplayTree.prototype.minNode=function(u){if(void 0===u&&(u=this._root),u)for(;u.left;)u=u.left;return u},SplayTree.prototype.maxNode=function(u){if(void 0===u&&(u=this._root),u)for(;u.right;)u=u.right;return u},SplayTree.prototype.insert=function(key,data){var z=this._root,p=null,comp=this._compare;if(this._noDuplicates)for(;z;){if(p=z,0===comp(z.key,key))return;z=comp(z.key,key)<0?z.right:z.left}else for(;z;)p=z,z=comp(z.key,key)<0?z.right:z.left;return z={key:key,data:data,left:null,right:null,parent:p},p?comp(p.key,z.key)<0?p.right=z:p.left=z:this._root=z,this.splay(z),this._size++,z},SplayTree.prototype.find=function(key){for(var z=this._root,comp=this._compare;z;){var cmp=comp(z.key,key);if(cmp<0)z=z.right;else{if(!(cmp>0))return z;z=z.left}}return null},SplayTree.prototype.contains=function(key){for(var node=this._root,comparator=this._compare;node;){var cmp=comparator(key,node.key);if(0===cmp)return!0;node=cmp<0?node.left:node.right}return!1},SplayTree.prototype.remove=function(key){var z=this.find(key);if(!z)return!1;if(this.splay(z),z.left)if(z.right){var y=this.minNode(z.right);y.parent!==z&&(this.replace(y,y.right),y.right=z.right,y.right.parent=y),this.replace(z,y),y.left=z.left,y.left.parent=y}else this.replace(z,z.left);else this.replace(z,z.right);return this._size--,!0},SplayTree.prototype.removeNode=function(z){if(!z)return!1;if(this.splay(z),z.left)if(z.right){var y=this.minNode(z.right);y.parent!==z&&(this.replace(y,y.right),y.right=z.right,y.right.parent=y),this.replace(z,y),y.left=z.left,y.left.parent=y}else this.replace(z,z.left);else this.replace(z,z.right);return this._size--,!0},SplayTree.prototype.erase=function(key){var z=this.find(key);if(z){this.splay(z);var s=z.left,t=z.right,sMax=null;s&&(s.parent=null,sMax=this.maxNode(s),this.splay(sMax),this._root=sMax),t&&(s?sMax.right=t:this._root=t,t.parent=sMax),this._size--}},SplayTree.prototype.pop=function(){var node=this._root,returnValue=null;if(node){for(;node.left;)node=node.left;returnValue={key:node.key,data:node.data},this.remove(node.key)}return returnValue},SplayTree.prototype.next=function(node){var successor=node;if(successor)if(successor.right)for(successor=successor.right;successor&&successor.left;)successor=successor.left;else for(successor=node.parent;successor&&successor.right===node;)node=successor,successor=successor.parent;return successor},SplayTree.prototype.prev=function(node){var predecessor=node;if(predecessor)if(predecessor.left)for(predecessor=predecessor.left;predecessor&&predecessor.right;)predecessor=predecessor.right;else for(predecessor=node.parent;predecessor&&predecessor.left===node;)node=predecessor,predecessor=predecessor.parent;return predecessor},SplayTree.prototype.forEach=function(callback){for(var current=this._root,s=[],done=!1,i=0;!done;)current?(s.push(current),current=current.left):s.length>0?(callback(current=s.pop(),i++),current=current.right):done=!0;return this},SplayTree.prototype.range=function(low,high,fn,ctx){for(var Q=[],compare=this._compare,node=this._root;0!==Q.length||node;)if(node)Q.push(node),node=node.left;else{if(compare((node=Q.pop()).key,high)>0)break;if(compare(node.key,low)>=0&&fn.call(ctx,node))return this;node=node.right}return this},SplayTree.prototype.keys=function(){for(var current=this._root,s=[],r=[],done=!1;!done;)current?(s.push(current),current=current.left):s.length>0?(current=s.pop(),r.push(current.key),current=current.right):done=!0;return r},SplayTree.prototype.values=function(){for(var current=this._root,s=[],r=[],done=!1;!done;)current?(s.push(current),current=current.left):s.length>0?(current=s.pop(),r.push(current.data),current=current.right):done=!0;return r},SplayTree.prototype.at=function(index){for(var current=this._root,s=[],done=!1,i=0;!done;)if(current)s.push(current),current=current.left;else if(s.length>0){if(current=s.pop(),i===index)return current;i++,current=current.right}else done=!0;return null},SplayTree.prototype.load=function(keys,values,presort){if(void 0===keys&&(keys=[]),void 0===values&&(values=[]),void 0===presort&&(presort=!1),0!==this._size)throw new Error("bulk-load: tree is not empty");var size=keys.length;return presort&&function sort(keys,values,left,right,compare){if(left>=right)return;var pivot=keys[left+right>>1];var i=left-1;var j=right+1;for(;;){do{i++}while(compare(keys[i],pivot)<0);do{j--}while(compare(keys[j],pivot)>0);if(i>=j)break;var tmp=keys[i];keys[i]=keys[j],keys[j]=tmp,tmp=values[i],values[i]=values[j],values[j]=tmp}sort(keys,values,left,j,compare);sort(keys,values,j+1,right,compare)}(keys,values,0,size-1,this._compare),this._root=function loadRecursive(parent,keys,values,start,end){var size=end-start;if(size>0){var middle=start+Math.floor(size/2),key=keys[middle],data=values[middle],node={key:key,data:data,parent:parent};return node.left=loadRecursive(node,keys,values,start,middle),node.right=loadRecursive(node,keys,values,middle+1,end),node}return null}(null,keys,values,0,size),this._size=size,this},SplayTree.prototype.min=function(){var node=this.minNode(this._root);return node?node.key:null},SplayTree.prototype.max=function(){var node=this.maxNode(this._root);return node?node.key:null},SplayTree.prototype.isEmpty=function(){return null===this._root},prototypeAccessors.size.get=function(){return this._size},SplayTree.createTree=function(keys,values,comparator,presort,noDuplicates){return new SplayTree(comparator,noDuplicates).load(keys,values,presort)},Object.defineProperties(SplayTree.prototype,prototypeAccessors);var NORMAL=0,NON_CONTRIBUTING=1,SAME_TRANSITION=2,DIFFERENT_TRANSITION=3,INTERSECTION=0,UNION=1,DIFFERENCE=2,XOR=3;function computeFields(event,prev,operation){null===prev?(event.inOut=!1,event.otherInOut=!0):(event.isSubject===prev.isSubject?(event.inOut=!prev.inOut,event.otherInOut=prev.otherInOut):(event.inOut=!prev.otherInOut,event.otherInOut=prev.isVertical()?!prev.inOut:prev.inOut),prev&&(event.prevInResult=!inResult(prev,operation)||prev.isVertical()?prev.prevInResult:prev)),event.inResult=inResult(event,operation)}function inResult(event,operation){switch(event.type){case NORMAL:switch(operation){case INTERSECTION:return!event.otherInOut;case UNION:return event.otherInOut;case DIFFERENCE:return event.isSubject&&event.otherInOut||!event.isSubject&&!event.otherInOut;case XOR:return!0}break;case SAME_TRANSITION:return operation===INTERSECTION||operation===UNION;case DIFFERENT_TRANSITION:return operation===DIFFERENCE;case NON_CONTRIBUTING:return!1}return!1}var SweepEvent=function(point,left,otherEvent,isSubject,edgeType){this.left=left,this.point=point,this.otherEvent=otherEvent,this.isSubject=isSubject,this.type=edgeType||NORMAL,this.inOut=!1,this.otherInOut=!1,this.prevInResult=null,this.inResult=!1,this.resultInOut=!1,this.isExteriorRing=!0};function equals(p1,p2){return p1[0]===p2[0]&&p1[1]===p2[1]}function signedArea(p0,p1,p2){return(p0[0]-p2[0])*(p1[1]-p2[1])-(p1[0]-p2[0])*(p0[1]-p2[1])}function compareEvents(e1,e2){var p1=e1.point,p2=e2.point;return p1[0]>p2[0]?1:p1[0]<p2[0]?-1:p1[1]!==p2[1]?p1[1]>p2[1]?1:-1:function(e1,e2,p1,p2){if(e1.left!==e2.left)return e1.left?1:-1;if(0!==signedArea(p1,e1.otherEvent.point,e2.otherEvent.point))return e1.isBelow(e2.otherEvent.point)?-1:1;return!e1.isSubject&&e2.isSubject?1:-1}(e1,e2,p1)}function divideSegment(se,p,queue){var r=new SweepEvent(p,!1,se,se.isSubject),l=new SweepEvent(p,!0,se.otherEvent,se.isSubject);return equals(se.point,se.otherEvent.point)&&console.warn("what is that, a collapsed segment?",se),r.contourId=l.contourId=se.contourId,compareEvents(l,se.otherEvent)>0&&(se.otherEvent.left=!0,l.left=!1),se.otherEvent.otherEvent=l,se.otherEvent=r,queue.push(l),queue.push(r),queue}function crossProduct(a,b){return a[0]*b[1]-a[1]*b[0]}function dotProduct(a,b){return a[0]*b[0]+a[1]*b[1]}function possibleIntersection(se1,se2,queue){var inter=function(a1,a2,b1,b2,noEndpointTouch){var va=[a2[0]-a1[0],a2[1]-a1[1]],vb=[b2[0]-b1[0],b2[1]-b1[1]];function toPoint(p,s,d){return[p[0]+s*d[0],p[1]+s*d[1]]}var e=[b1[0]-a1[0],b1[1]-a1[1]],kross=crossProduct(va,vb),sqrKross=kross*kross,sqrLenA=dotProduct(va,va);if(sqrKross>0){var s=crossProduct(e,vb)/kross;if(s<0||s>1)return null;var t=crossProduct(e,va)/kross;return t<0||t>1?null:0===s||1===s?noEndpointTouch?null:[toPoint(a1,s,va)]:0===t||1===t?noEndpointTouch?null:[toPoint(b1,t,vb)]:[toPoint(a1,s,va)]}if((sqrKross=(kross=crossProduct(e,va))*kross)>0)return null;var sa=dotProduct(va,e)/sqrLenA,sb=sa+dotProduct(va,vb)/sqrLenA,smin=Math.min(sa,sb),smax=Math.max(sa,sb);return smin<=1&&smax>=0?1===smin?noEndpointTouch?null:[toPoint(a1,smin>0?smin:0,va)]:0===smax?noEndpointTouch?null:[toPoint(a1,smax<1?smax:1,va)]:noEndpointTouch&&0===smin&&1===smax?null:[toPoint(a1,smin>0?smin:0,va),toPoint(a1,smax<1?smax:1,va)]:null}(se1.point,se1.otherEvent.point,se2.point,se2.otherEvent.point),nintersections=inter?inter.length:0;if(0===nintersections)return 0;if(1===nintersections&&(equals(se1.point,se2.point)||equals(se1.otherEvent.point,se2.otherEvent.point)))return 0;if(2===nintersections&&se1.isSubject===se2.isSubject)return 0;if(1===nintersections)return equals(se1.point,inter[0])||equals(se1.otherEvent.point,inter[0])||divideSegment(se1,inter[0],queue),equals(se2.point,inter[0])||equals(se2.otherEvent.point,inter[0])||divideSegment(se2,inter[0],queue),1;var events=[],leftCoincide=!1,rightCoincide=!1;return equals(se1.point,se2.point)?leftCoincide=!0:1===compareEvents(se1,se2)?events.push(se2,se1):events.push(se1,se2),equals(se1.otherEvent.point,se2.otherEvent.point)?rightCoincide=!0:1===compareEvents(se1.otherEvent,se2.otherEvent)?events.push(se2.otherEvent,se1.otherEvent):events.push(se1.otherEvent,se2.otherEvent),leftCoincide&&rightCoincide||leftCoincide?(se2.type=NON_CONTRIBUTING,se1.type=se2.inOut===se1.inOut?SAME_TRANSITION:DIFFERENT_TRANSITION,leftCoincide&&!rightCoincide&&divideSegment(events[1].otherEvent,events[0].point,queue),2):rightCoincide?(divideSegment(events[0],events[1].point,queue),3):events[0]!==events[3].otherEvent?(divideSegment(events[0],events[1].point,queue),divideSegment(events[1],events[2].point,queue),3):(divideSegment(events[0],events[1].point,queue),divideSegment(events[3].otherEvent,events[2].point,queue),3)}function compareSegments(le1,le2){if(le1===le2)return 0;if(0!==signedArea(le1.point,le1.otherEvent.point,le2.point)||0!==signedArea(le1.point,le1.otherEvent.point,le2.otherEvent.point))return equals(le1.point,le2.point)?le1.isBelow(le2.otherEvent.point)?-1:1:le1.point[0]===le2.point[0]?le1.point[1]<le2.point[1]?-1:1:1===compareEvents(le1,le2)?le2.isAbove(le1.point)?-1:1:le1.isBelow(le2.point)?-1:1;if(le1.isSubject!==le2.isSubject)return le1.isSubject?-1:1;var p1=le1.point,p2=le2.point;return p1[0]===p2[0]&&p1[1]===p2[1]?(p1=le1.otherEvent.point,p2=le2.otherEvent.point,p1[0]===p2[0]&&p1[1]===p2[1]?0:le1.contourId>le2.contourId?1:-1):1===compareEvents(le1,le2)?1:-1}function nextPos(pos,resultEvents,processed,origIndex){var newPos=pos+1,length=resultEvents.length;if(newPos>length-1)return pos-1;for(var p=resultEvents[pos].point,p1=resultEvents[newPos].point;newPos<length&&p1[0]===p[0]&&p1[1]===p[1];){if(!processed[newPos])return newPos;p1=resultEvents[++newPos].point}for(newPos=pos-1;processed[newPos]&&newPos>=origIndex;)newPos--;return newPos}function connectEdges(sortedEvents,operation){var i,len,event,resultEvents=function(sortedEvents){var event,i,len,tmp,resultEvents=[];for(i=0,len=sortedEvents.length;i<len;i++)((event=sortedEvents[i]).left&&event.inResult||!event.left&&event.otherEvent.inResult)&&resultEvents.push(event);for(var sorted=!1;!sorted;)for(sorted=!0,i=0,len=resultEvents.length;i<len;i++)i+1<len&&1===compareEvents(resultEvents[i],resultEvents[i+1])&&(tmp=resultEvents[i],resultEvents[i]=resultEvents[i+1],resultEvents[i+1]=tmp,sorted=!1);for(i=0,len=resultEvents.length;i<len;i++)(event=resultEvents[i]).pos=i;for(i=0,len=resultEvents.length;i<len;i++)(event=resultEvents[i]).left||(tmp=event.pos,event.pos=event.otherEvent.pos,event.otherEvent.pos=tmp);return resultEvents}(sortedEvents),processed={},result=[];for(i=0,len=resultEvents.length;i<len;i++)if(!processed[i]){var contour=[[]];resultEvents[i].isExteriorRing?operation===DIFFERENCE&&!resultEvents[i].isSubject&&result.length>1?result[result.length-1].push(contour[0]):result.push(contour):operation!==DIFFERENCE||resultEvents[i].isSubject||0!==result.length?0===result.length?result.push([[contour]]):result[result.length-1].push(contour[0]):result.push(contour);var ringId=result.length-1,pos=i,initial=resultEvents[i].point;for(contour[0].push(initial);pos>=i;)event=resultEvents[pos],processed[pos]=!0,event.left?(event.resultInOut=!1,event.contourId=ringId):(event.otherEvent.resultInOut=!0,event.otherEvent.contourId=ringId),processed[pos=event.pos]=!0,contour[0].push(resultEvents[pos].point),pos=nextPos(pos,resultEvents,processed,i);event=resultEvents[pos=-1===pos?i:pos],processed[pos]=processed[event.pos]=!0,event.otherEvent.resultInOut=!0,event.otherEvent.contourId=ringId}return result}SweepEvent.prototype.isBelow=function(p){var p0=this.point,p1=this.otherEvent.point;return this.left?(p0[0]-p[0])*(p1[1]-p[1])-(p1[0]-p[0])*(p0[1]-p[1])>0:(p1[0]-p[0])*(p0[1]-p[1])-(p0[0]-p[0])*(p1[1]-p[1])>0},SweepEvent.prototype.isAbove=function(p){return!this.isBelow(p)},SweepEvent.prototype.isVertical=function(){return this.point[0]===this.otherEvent.point[0]},SweepEvent.prototype.clone=function(){var copy=new SweepEvent(this.point,this.left,this.otherEvent,this.isSubject,this.type);return copy.inResult=this.inResult,copy.prevInResult=this.prevInResult,copy.isExteriorRing=this.isExteriorRing,copy.inOut=this.inOut,copy.otherInOut=this.otherInOut,copy};var tinyqueue=TinyQueue,default_1=TinyQueue;function TinyQueue(data,compare){if(!(this instanceof TinyQueue))return new TinyQueue(data,compare);if(this.data=data||[],this.length=this.data.length,this.compare=compare||defaultCompare,this.length>0)for(var i=(this.length>>1)-1;i>=0;i--)this._down(i)}function defaultCompare(a,b){return a<b?-1:a>b?1:0}TinyQueue.prototype={push:function(item){this.data.push(item),this.length++,this._up(this.length-1)},pop:function(){if(0!==this.length){var top=this.data[0];return this.length--,this.length>0&&(this.data[0]=this.data[this.length],this._down(0)),this.data.pop(),top}},peek:function(){return this.data[0]},_up:function(pos){for(var data=this.data,compare=this.compare,item=data[pos];pos>0;){var parent=pos-1>>1,current=data[parent];if(compare(item,current)>=0)break;data[pos]=current,pos=parent}data[pos]=item},_down:function(pos){for(var data=this.data,compare=this.compare,halfLength=this.length>>1,item=data[pos];pos<halfLength;){var left=1+(pos<<1),right=left+1,best=data[left];if(right<this.length&&compare(data[right],best)<0&&(left=right,best=data[right]),compare(best,item)>=0)break;data[pos]=best,pos=left}data[pos]=item}},tinyqueue.default=default_1;var max=Math.max,min=Math.min,contourId=0;function processPolygon(contourOrHole,isSubject,depth,Q,bbox,isExteriorRing){var i,len,s1,s2,e1,e2;for(i=0,len=contourOrHole.length-1;i<len;i++)if(s1=contourOrHole[i],s2=contourOrHole[i+1],e1=new SweepEvent(s1,!1,void 0,isSubject),e2=new SweepEvent(s2,!1,e1,isSubject),e1.otherEvent=e2,s1[0]!==s2[0]||s1[1]!==s2[1]){e1.contourId=e2.contourId=depth,isExteriorRing||(e1.isExteriorRing=!1,e2.isExteriorRing=!1),compareEvents(e1,e2)>0?e2.left=!0:e1.left=!0;var x=s1[0],y=s1[1];bbox[0]=min(bbox[0],x),bbox[1]=min(bbox[1],y),bbox[2]=max(bbox[2],x),bbox[3]=max(bbox[3],y),Q.push(e1),Q.push(e2)}}var EMPTY=[];function boolean(subject,clipping,operation){"number"==typeof subject[0][0][0]&&(subject=[subject]),"number"==typeof clipping[0][0][0]&&(clipping=[clipping]);var trivial=function(subject,clipping,operation){var result=null;return subject.length*clipping.length==0&&(operation===INTERSECTION?result=EMPTY:operation===DIFFERENCE?result=subject:operation!==UNION&&operation!==XOR||(result=0===subject.length?clipping:subject)),result}(subject,clipping,operation);if(trivial)return trivial===EMPTY?null:trivial;var sbbox=[1/0,1/0,-1/0,-1/0],cbbox=[1/0,1/0,-1/0,-1/0],eventQueue=function(subject,clipping,sbbox,cbbox,operation){var polygonSet,isExteriorRing,i,ii,j,jj,eventQueue=new tinyqueue(null,compareEvents);for(i=0,ii=subject.length;i<ii;i++)for(j=0,jj=(polygonSet=subject[i]).length;j<jj;j++)(isExteriorRing=0===j)&&contourId++,processPolygon(polygonSet[j],!0,contourId,eventQueue,sbbox,isExteriorRing);for(i=0,ii=clipping.length;i<ii;i++)for(j=0,jj=(polygonSet=clipping[i]).length;j<jj;j++)isExteriorRing=0===j,operation===DIFFERENCE&&(isExteriorRing=!1),isExteriorRing&&contourId++,processPolygon(polygonSet[j],!1,contourId,eventQueue,cbbox,isExteriorRing);return eventQueue}(subject,clipping,sbbox,cbbox,operation);return(trivial=function(subject,clipping,sbbox,cbbox,operation){var result=null;return(sbbox[0]>cbbox[2]||cbbox[0]>sbbox[2]||sbbox[1]>cbbox[3]||cbbox[1]>sbbox[3])&&(operation===INTERSECTION?result=EMPTY:operation===DIFFERENCE?result=subject:operation!==UNION&&operation!==XOR||(result=subject.concat(clipping))),result}(subject,clipping,sbbox,cbbox,operation))?trivial===EMPTY?null:trivial:connectEdges(function(eventQueue,subject,clipping,sbbox,cbbox,operation){for(var prev,next,begin,sweepLine=new SplayTree(compareSegments),sortedEvents=[],rightbound=Math.min(sbbox[2],cbbox[2]);0!==eventQueue.length;){var event=eventQueue.pop();if(sortedEvents.push(event),operation===INTERSECTION&&event.point[0]>rightbound||operation===DIFFERENCE&&event.point[0]>sbbox[2])break;if(event.left){next=prev=sweepLine.insert(event),prev=prev!==(begin=sweepLine.minNode())?sweepLine.prev(prev):null,next=sweepLine.next(next);var prevEvent=prev?prev.key:null;if(computeFields(event,prevEvent,operation),next&&2===possibleIntersection(event,next.key,eventQueue)&&(computeFields(event,prevEvent,operation),computeFields(event,next.key,operation)),prev&&2===possibleIntersection(prev.key,event,eventQueue)){var prevprev=prev;computeFields(prevEvent,(prevprev=prevprev!==begin?sweepLine.prev(prevprev):null)?prevprev.key:null,operation),computeFields(event,prevEvent,operation)}}else event=event.otherEvent,next=prev=sweepLine.find(event),prev&&next&&(prev=prev!==begin?sweepLine.prev(prev):null,next=sweepLine.next(next),sweepLine.remove(event),next&&prev&&possibleIntersection(prev.key,next.key,eventQueue))}return sortedEvents}(eventQueue,0,0,sbbox,cbbox,operation),operation)}var operations={UNION:UNION,DIFFERENCE:DIFFERENCE,INTERSECTION:INTERSECTION,XOR:XOR};exports.union=function(subject,clipping){return boolean(subject,clipping,UNION)},exports.diff=function(subject,clipping){return boolean(subject,clipping,DIFFERENCE)},exports.xor=function(subject,clipping){return boolean(subject,clipping,XOR)},exports.intersection=function(subject,clipping){return boolean(subject,clipping,INTERSECTION)},exports.operations=operations,Object.defineProperty(exports,"__esModule",{value:!0})})("object"==typeof exports&&void 0!==module?exports:this.martinez={})},{}],76:[function(require,module,exports){"use strict";var numberIsNaN=function(value){return value!=value};module.exports=function(a,b){return 0===a&&0===b?1/a==1/b:a===b||!(!numberIsNaN(a)||!numberIsNaN(b))}},{}],77:[function(require,module,exports){"use strict";var define=require("define-properties"),callBind=require("es-abstract/helpers/callBind"),implementation=require("./implementation"),getPolyfill=require("./polyfill"),shim=require("./shim"),polyfill=callBind(getPolyfill(),Object);define(polyfill,{getPolyfill:getPolyfill,implementation:implementation,shim:shim}),module.exports=polyfill},{"./implementation":76,"./polyfill":78,"./shim":79,"define-properties":63,"es-abstract/helpers/callBind":65}],78:[function(require,module,exports){"use strict";var implementation=require("./implementation");module.exports=function(){return"function"==typeof Object.is?Object.is:implementation}},{"./implementation":76}],79:[function(require,module,exports){"use strict";var getPolyfill=require("./polyfill"),define=require("define-properties");module.exports=function(){var polyfill=getPolyfill();return define(Object,{is:polyfill},{is:function(){return Object.is!==polyfill}}),polyfill}},{"./polyfill":78,"define-properties":63}],80:[function(require,module,exports){"use strict";var keysShim;if(!Object.keys){var has=Object.prototype.hasOwnProperty,toStr=Object.prototype.toString,isArgs=require("./isArguments"),isEnumerable=Object.prototype.propertyIsEnumerable,hasDontEnumBug=!isEnumerable.call({toString:null},"toString"),hasProtoEnumBug=isEnumerable.call(function(){},"prototype"),dontEnums=["toString","toLocaleString","valueOf","hasOwnProperty","isPrototypeOf","propertyIsEnumerable","constructor"],equalsConstructorPrototype=function(o){var ctor=o.constructor;return ctor&&ctor.prototype===o},excludedKeys={$applicationCache:!0,$console:!0,$external:!0,$frame:!0,$frameElement:!0,$frames:!0,$innerHeight:!0,$innerWidth:!0,$onmozfullscreenchange:!0,$onmozfullscreenerror:!0,$outerHeight:!0,$outerWidth:!0,$pageXOffset:!0,$pageYOffset:!0,$parent:!0,$scrollLeft:!0,$scrollTop:!0,$scrollX:!0,$scrollY:!0,$self:!0,$webkitIndexedDB:!0,$webkitStorageInfo:!0,$window:!0},hasAutomationEqualityBug=function(){if("undefined"==typeof window)return!1;for(var k in window)try{if(!excludedKeys["$"+k]&&has.call(window,k)&&null!==window[k]&&"object"==typeof window[k])try{equalsConstructorPrototype(window[k])}catch(e){return!0}}catch(e){return!0}return!1}();keysShim=function(object){var isObject=null!==object&&"object"==typeof object,isFunction="[object Function]"===toStr.call(object),isArguments=isArgs(object),isString=isObject&&"[object String]"===toStr.call(object),theKeys=[];if(!isObject&&!isFunction&&!isArguments)throw new TypeError("Object.keys called on a non-object");var skipProto=hasProtoEnumBug&&isFunction;if(isString&&object.length>0&&!has.call(object,0))for(var i=0;i<object.length;++i)theKeys.push(String(i));if(isArguments&&object.length>0)for(var j=0;j<object.length;++j)theKeys.push(String(j));else for(var name in object)skipProto&&"prototype"===name||!has.call(object,name)||theKeys.push(String(name));if(hasDontEnumBug)for(var skipConstructor=function(o){if("undefined"==typeof window||!hasAutomationEqualityBug)return equalsConstructorPrototype(o);try{return equalsConstructorPrototype(o)}catch(e){return!1}}(object),k=0;k<dontEnums.length;++k)skipConstructor&&"constructor"===dontEnums[k]||!has.call(object,dontEnums[k])||theKeys.push(dontEnums[k]);return theKeys}}module.exports=keysShim},{"./isArguments":82}],81:[function(require,module,exports){"use strict";var slice=Array.prototype.slice,isArgs=require("./isArguments"),origKeys=Object.keys,keysShim=origKeys?function(o){return origKeys(o)}:require("./implementation"),originalKeys=Object.keys;keysShim.shim=function(){Object.keys?function(){var args=Object.keys(arguments);return args&&args.length===arguments.length}(1,2)||(Object.keys=function(object){return isArgs(object)?originalKeys(slice.call(object)):originalKeys(object)}):Object.keys=keysShim;return Object.keys||keysShim},module.exports=keysShim},{"./implementation":80,"./isArguments":82}],82:[function(require,module,exports){"use strict";var toStr=Object.prototype.toString;module.exports=function(value){var str=toStr.call(value),isArgs="[object Arguments]"===str;return isArgs||(isArgs="[object Array]"!==str&&null!==value&&"object"==typeof value&&"number"==typeof value.length&&value.length>=0&&"[object Function]"===toStr.call(value.callee)),isArgs}},{}],83:[function(require,module,exports){module.exports=function(point,vs){for(var x=point[0],y=point[1],inside=!1,i=0,j=vs.length-1;i<vs.length;j=i++){var xi=vs[i][0],yi=vs[i][1],xj=vs[j][0],yj=vs[j][1];yi>y!=yj>y&&x<(xj-xi)*(y-yi)/(yj-yi)+xi&&(inside=!inside)}return inside}},{}],84:[function(require,module,exports){var global,factory;global=this,factory=function(){"use strict";function swap(arr,i,j){var tmp=arr[i];arr[i]=arr[j],arr[j]=tmp}function defaultCompare(a,b){return a<b?-1:a>b?1:0}return function(arr,k,left,right,compare){!function quickselectStep(arr,k,left,right,compare){for(;right>left;){if(right-left>600){var n=right-left+1,m=k-left+1,z=Math.log(n),s=.5*Math.exp(2*z/3),sd=.5*Math.sqrt(z*s*(n-s)/n)*(m-n/2<0?-1:1),newLeft=Math.max(left,Math.floor(k-m*s/n+sd)),newRight=Math.min(right,Math.floor(k+(n-m)*s/n+sd));quickselectStep(arr,k,newLeft,newRight,compare)}var t=arr[k],i=left,j=right;for(swap(arr,left,k),compare(arr[right],t)>0&&swap(arr,left,right);i<j;){for(swap(arr,i,j),i++,j--;compare(arr[i],t)<0;)i++;for(;compare(arr[j],t)>0;)j--}0===compare(arr[left],t)?swap(arr,left,j):swap(arr,++j,right),j<=k&&(left=j+1),k<=j&&(right=j-1)}}(arr,k,left||0,right||arr.length-1,compare||defaultCompare)}},"object"==typeof exports&&void 0!==module?module.exports=factory():global.quickselect=factory()},{}],85:[function(require,module,exports){"use strict";module.exports=rbush,module.exports.default=rbush;var quickselect=require("quickselect");function rbush(maxEntries,format){if(!(this instanceof rbush))return new rbush(maxEntries,format);this._maxEntries=Math.max(4,maxEntries||9),this._minEntries=Math.max(2,Math.ceil(.4*this._maxEntries)),format&&this._initFormat(format),this.clear()}function findItem(item,items,equalsFn){if(!equalsFn)return items.indexOf(item);for(var i=0;i<items.length;i++)if(equalsFn(item,items[i]))return i;return-1}function calcBBox(node,toBBox){distBBox(node,0,node.children.length,toBBox,node)}function distBBox(node,k,p,toBBox,destNode){destNode||(destNode=createNode(null)),destNode.minX=1/0,destNode.minY=1/0,destNode.maxX=-1/0,destNode.maxY=-1/0;for(var child,i=k;i<p;i++)child=node.children[i],extend(destNode,node.leaf?toBBox(child):child);return destNode}function extend(a,b){return a.minX=Math.min(a.minX,b.minX),a.minY=Math.min(a.minY,b.minY),a.maxX=Math.max(a.maxX,b.maxX),a.maxY=Math.max(a.maxY,b.maxY),a}function compareNodeMinX(a,b){return a.minX-b.minX}function compareNodeMinY(a,b){return a.minY-b.minY}function bboxArea(a){return(a.maxX-a.minX)*(a.maxY-a.minY)}function bboxMargin(a){return a.maxX-a.minX+(a.maxY-a.minY)}function contains(a,b){return a.minX<=b.minX&&a.minY<=b.minY&&b.maxX<=a.maxX&&b.maxY<=a.maxY}function intersects(a,b){return b.minX<=a.maxX&&b.minY<=a.maxY&&b.maxX>=a.minX&&b.maxY>=a.minY}function createNode(children){return{children:children,height:1,leaf:!0,minX:1/0,minY:1/0,maxX:-1/0,maxY:-1/0}}function multiSelect(arr,left,right,n,compare){for(var mid,stack=[left,right];stack.length;)(right=stack.pop())-(left=stack.pop())<=n||(mid=left+Math.ceil((right-left)/n/2)*n,quickselect(arr,mid,left,right,compare),stack.push(left,mid,mid,right))}rbush.prototype={all:function(){return this._all(this.data,[])},search:function(bbox){var node=this.data,result=[],toBBox=this.toBBox;if(!intersects(bbox,node))return result;for(var i,len,child,childBBox,nodesToSearch=[];node;){for(i=0,len=node.children.length;i<len;i++)child=node.children[i],intersects(bbox,childBBox=node.leaf?toBBox(child):child)&&(node.leaf?result.push(child):contains(bbox,childBBox)?this._all(child,result):nodesToSearch.push(child));node=nodesToSearch.pop()}return result},collides:function(bbox){var node=this.data,toBBox=this.toBBox;if(!intersects(bbox,node))return!1;for(var i,len,child,childBBox,nodesToSearch=[];node;){for(i=0,len=node.children.length;i<len;i++)if(child=node.children[i],intersects(bbox,childBBox=node.leaf?toBBox(child):child)){if(node.leaf||contains(bbox,childBBox))return!0;nodesToSearch.push(child)}node=nodesToSearch.pop()}return!1},load:function(data){if(!data||!data.length)return this;if(data.length<this._minEntries){for(var i=0,len=data.length;i<len;i++)this.insert(data[i]);return this}var node=this._build(data.slice(),0,data.length-1,0);if(this.data.children.length)if(this.data.height===node.height)this._splitRoot(this.data,node);else{if(this.data.height<node.height){var tmpNode=this.data;this.data=node,node=tmpNode}this._insert(node,this.data.height-node.height-1,!0)}else this.data=node;return this},insert:function(item){return item&&this._insert(item,this.data.height-1),this},clear:function(){return this.data=createNode([]),this},remove:function(item,equalsFn){if(!item)return this;for(var i,parent,index,goingUp,node=this.data,bbox=this.toBBox(item),path=[],indexes=[];node||path.length;){if(node||(node=path.pop(),parent=path[path.length-1],i=indexes.pop(),goingUp=!0),node.leaf&&-1!==(index=findItem(item,node.children,equalsFn)))return node.children.splice(index,1),path.push(node),this._condense(path),this;goingUp||node.leaf||!contains(node,bbox)?parent?(i++,node=parent.children[i],goingUp=!1):node=null:(path.push(node),indexes.push(i),i=0,parent=node,node=node.children[0])}return this},toBBox:function(item){return item},compareMinX:compareNodeMinX,compareMinY:compareNodeMinY,toJSON:function(){return this.data},fromJSON:function(data){return this.data=data,this},_all:function(node,result){for(var nodesToSearch=[];node;)node.leaf?result.push.apply(result,node.children):nodesToSearch.push.apply(nodesToSearch,node.children),node=nodesToSearch.pop();return result},_build:function(items,left,right,height){var node,N=right-left+1,M=this._maxEntries;if(N<=M)return calcBBox(node=createNode(items.slice(left,right+1)),this.toBBox),node;height||(height=Math.ceil(Math.log(N)/Math.log(M)),M=Math.ceil(N/Math.pow(M,height-1))),(node=createNode([])).leaf=!1,node.height=height;var i,j,right2,right3,N2=Math.ceil(N/M),N1=N2*Math.ceil(Math.sqrt(M));for(multiSelect(items,left,right,N1,this.compareMinX),i=left;i<=right;i+=N1)for(multiSelect(items,i,right2=Math.min(i+N1-1,right),N2,this.compareMinY),j=i;j<=right2;j+=N2)right3=Math.min(j+N2-1,right2),node.children.push(this._build(items,j,right3,height-1));return calcBBox(node,this.toBBox),node},_chooseSubtree:function(bbox,node,level,path){for(var i,len,child,targetNode,area,enlargement,minArea,minEnlargement,a,b;path.push(node),!node.leaf&&path.length-1!==level;){for(minArea=minEnlargement=1/0,i=0,len=node.children.length;i<len;i++)area=bboxArea(child=node.children[i]),a=bbox,b=child,(enlargement=(Math.max(b.maxX,a.maxX)-Math.min(b.minX,a.minX))*(Math.max(b.maxY,a.maxY)-Math.min(b.minY,a.minY))-area)<minEnlargement?(minEnlargement=enlargement,minArea=area<minArea?area:minArea,targetNode=child):enlargement===minEnlargement&&area<minArea&&(minArea=area,targetNode=child);node=targetNode||node.children[0]}return node},_insert:function(item,level,isNode){var toBBox=this.toBBox,bbox=isNode?item:toBBox(item),insertPath=[],node=this._chooseSubtree(bbox,this.data,level,insertPath);for(node.children.push(item),extend(node,bbox);level>=0&&insertPath[level].children.length>this._maxEntries;)this._split(insertPath,level),level--;this._adjustParentBBoxes(bbox,insertPath,level)},_split:function(insertPath,level){var node=insertPath[level],M=node.children.length,m=this._minEntries;this._chooseSplitAxis(node,m,M);var splitIndex=this._chooseSplitIndex(node,m,M),newNode=createNode(node.children.splice(splitIndex,node.children.length-splitIndex));newNode.height=node.height,newNode.leaf=node.leaf,calcBBox(node,this.toBBox),calcBBox(newNode,this.toBBox),level?insertPath[level-1].children.push(newNode):this._splitRoot(node,newNode)},_splitRoot:function(node,newNode){this.data=createNode([node,newNode]),this.data.height=node.height+1,this.data.leaf=!1,calcBBox(this.data,this.toBBox)},_chooseSplitIndex:function(node,m,M){var i,bbox1,bbox2,overlap,area,minOverlap,minArea,index,a,b,minX,minY,maxX,maxY;for(minOverlap=minArea=1/0,i=m;i<=M-m;i++)bbox1=distBBox(node,0,i,this.toBBox),bbox2=distBBox(node,i,M,this.toBBox),a=bbox1,b=bbox2,void 0,void 0,void 0,void 0,minX=Math.max(a.minX,b.minX),minY=Math.max(a.minY,b.minY),maxX=Math.min(a.maxX,b.maxX),maxY=Math.min(a.maxY,b.maxY),overlap=Math.max(0,maxX-minX)*Math.max(0,maxY-minY),area=bboxArea(bbox1)+bboxArea(bbox2),overlap<minOverlap?(minOverlap=overlap,index=i,minArea=area<minArea?area:minArea):overlap===minOverlap&&area<minArea&&(minArea=area,index=i);return index},_chooseSplitAxis:function(node,m,M){var compareMinX=node.leaf?this.compareMinX:compareNodeMinX,compareMinY=node.leaf?this.compareMinY:compareNodeMinY;this._allDistMargin(node,m,M,compareMinX)<this._allDistMargin(node,m,M,compareMinY)&&node.children.sort(compareMinX)},_allDistMargin:function(node,m,M,compare){node.children.sort(compare);var i,child,toBBox=this.toBBox,leftBBox=distBBox(node,0,m,toBBox),rightBBox=distBBox(node,M-m,M,toBBox),margin=bboxMargin(leftBBox)+bboxMargin(rightBBox);for(i=m;i<M-m;i++)child=node.children[i],extend(leftBBox,node.leaf?toBBox(child):child),margin+=bboxMargin(leftBBox);for(i=M-m-1;i>=m;i--)child=node.children[i],extend(rightBBox,node.leaf?toBBox(child):child),margin+=bboxMargin(rightBBox);return margin},_adjustParentBBoxes:function(bbox,path,level){for(var i=level;i>=0;i--)extend(path[i],bbox)},_condense:function(path){for(var siblings,i=path.length-1;i>=0;i--)0===path[i].children.length?i>0?(siblings=path[i-1].children).splice(siblings.indexOf(path[i]),1):this.clear():calcBBox(path[i],this.toBBox)},_initFormat:function(format){var compareArr=["return a"," - b",";"];this.compareMinX=new Function("a","b",compareArr.join(format[0])),this.compareMinY=new Function("a","b",compareArr.join(format[1])),this.toBBox=new Function("a","return {minX: a"+format[0]+", minY: a"+format[1]+", maxX: a"+format[2]+", maxY: a"+format[3]+"};")}}},{quickselect:84}],86:[function(require,module,exports){"use strict";var $Object=Object,$TypeError=TypeError;module.exports=function(){if(null!=this&&this!==$Object(this))throw new $TypeError("RegExp.prototype.flags getter called on non-object");var result="";return this.global&&(result+="g"),this.ignoreCase&&(result+="i"),this.multiline&&(result+="m"),this.dotAll&&(result+="s"),this.unicode&&(result+="u"),this.sticky&&(result+="y"),result}},{}],87:[function(require,module,exports){"use strict";var define=require("define-properties"),callBind=require("es-abstract/helpers/callBind"),implementation=require("./implementation"),getPolyfill=require("./polyfill"),shim=require("./shim"),flagsBound=callBind(implementation);define(flagsBound,{getPolyfill:getPolyfill,implementation:implementation,shim:shim}),module.exports=flagsBound},{"./implementation":86,"./polyfill":88,"./shim":89,"define-properties":63,"es-abstract/helpers/callBind":65}],88:[function(require,module,exports){"use strict";var implementation=require("./implementation"),supportsDescriptors=require("define-properties").supportsDescriptors,$gOPD=Object.getOwnPropertyDescriptor,$TypeError=TypeError;module.exports=function(){if(!supportsDescriptors)throw new $TypeError("RegExp.prototype.flags requires a true ES5 environment that supports property descriptors");if("gim"===/a/gim.flags){var descriptor=$gOPD(RegExp.prototype,"flags");if(descriptor&&"function"==typeof descriptor.get&&"boolean"==typeof/a/.dotAll)return descriptor.get}return implementation}},{"./implementation":86,"define-properties":63}],89:[function(require,module,exports){"use strict";var supportsDescriptors=require("define-properties").supportsDescriptors,getPolyfill=require("./polyfill"),gOPD=Object.getOwnPropertyDescriptor,defineProperty=Object.defineProperty,TypeErr=TypeError,getProto=Object.getPrototypeOf,regex=/a/;module.exports=function(){if(!supportsDescriptors||!getProto)throw new TypeErr("RegExp.prototype.flags requires a true ES5 environment that supports property descriptors");var polyfill=getPolyfill(),proto=getProto(regex),descriptor=gOPD(proto,"flags");return descriptor&&descriptor.get===polyfill||defineProperty(proto,"flags",{configurable:!0,enumerable:!1,get:polyfill}),polyfill}},{"./polyfill":88,"define-properties":63}],90:[function(require,module,exports){var t;t=this,function(t){"use strict";const e=134217729;function r(t,e,n,r,o){let f,i,u,c,s=e[0],a=r[0],d=0,l=0;a>s==a>-s?(f=s,s=e[++d]):(f=a,a=r[++l]);let p=0;if(d<t&&l<n)for(a>s==a>-s?(u=f-((i=s+f)-s),s=e[++d]):(u=f-((i=a+f)-a),a=r[++l]),f=i,0!==u&&(o[p++]=u);d<t&&l<n;)a>s==a>-s?(u=f-((i=f+s)-(c=i-f))+(s-c),s=e[++d]):(u=f-((i=f+a)-(c=i-f))+(a-c),a=r[++l]),f=i,0!==u&&(o[p++]=u);for(;d<t;)u=f-((i=f+s)-(c=i-f))+(s-c),s=e[++d],f=i,0!==u&&(o[p++]=u);for(;l<n;)u=f-((i=f+a)-(c=i-f))+(a-c),a=r[++l],f=i,0!==u&&(o[p++]=u);return 0===f&&0!==p||(o[p++]=f),p}function o(t){return new Float64Array(t)}const c=o(4),s=o(8),a=o(12),d=o(16),l=o(4);t.orient2d=function(t,o,p,b,y,h){const M=(o-h)*(p-y),x=(t-y)*(b-h),j=M-x;if(0===M||0===x||M>0!=x>0)return j;const m=Math.abs(M+x);return Math.abs(j)>=3.3306690738754716e-16*m?j:-function(t,o,f,p,b,y,h){let M,x,j,m,_,v,w,A,F,O,P,g,k,q,z,B,C,D;const E=t-b,G=f-b,H=o-y,I=p-y;_=(z=(A=E-(w=(v=e*E)-(v-E)))*(O=I-(F=(v=e*I)-(v-I)))-((q=E*I)-w*F-A*F-w*O))-(P=z-(C=(A=H-(w=(v=e*H)-(v-H)))*(O=G-(F=(v=e*G)-(v-G)))-((B=H*G)-w*F-A*F-w*O))),c[0]=z-(P+_)+(_-C),_=(k=q-((g=q+P)-(_=g-q))+(P-_))-(P=k-B),c[1]=k-(P+_)+(_-B),_=(D=g+P)-g,c[2]=g-(D-_)+(P-_),c[3]=D;let J=function(t,e){let n=e[0];for(let r=1;r<4;r++)n+=e[r];return n}(0,c),K=2.2204460492503146e-16*h;if(J>=K||-J>=K)return J;if(M=t-(E+(_=t-E))+(_-b),j=f-(G+(_=f-G))+(_-b),x=o-(H+(_=o-H))+(_-y),m=p-(I+(_=p-I))+(_-y),0===M&&0===x&&0===j&&0===m)return J;if(K=1.1093356479670487e-31*h+3.3306690738754706e-16*Math.abs(J),(J+=E*m+I*M-(H*j+G*x))>=K||-J>=K)return J;_=(z=(A=M-(w=(v=e*M)-(v-M)))*(O=I-(F=(v=e*I)-(v-I)))-((q=M*I)-w*F-A*F-w*O))-(P=z-(C=(A=x-(w=(v=e*x)-(v-x)))*(O=G-(F=(v=e*G)-(v-G)))-((B=x*G)-w*F-A*F-w*O))),l[0]=z-(P+_)+(_-C),_=(k=q-((g=q+P)-(_=g-q))+(P-_))-(P=k-B),l[1]=k-(P+_)+(_-B),_=(D=g+P)-g,l[2]=g-(D-_)+(P-_),l[3]=D;const L=r(4,c,4,l,s);_=(z=(A=E-(w=(v=e*E)-(v-E)))*(O=m-(F=(v=e*m)-(v-m)))-((q=E*m)-w*F-A*F-w*O))-(P=z-(C=(A=H-(w=(v=e*H)-(v-H)))*(O=j-(F=(v=e*j)-(v-j)))-((B=H*j)-w*F-A*F-w*O))),l[0]=z-(P+_)+(_-C),_=(k=q-((g=q+P)-(_=g-q))+(P-_))-(P=k-B),l[1]=k-(P+_)+(_-B),_=(D=g+P)-g,l[2]=g-(D-_)+(P-_),l[3]=D;const N=r(L,s,4,l,a);_=(z=(A=M-(w=(v=e*M)-(v-M)))*(O=m-(F=(v=e*m)-(v-m)))-((q=M*m)-w*F-A*F-w*O))-(P=z-(C=(A=x-(w=(v=e*x)-(v-x)))*(O=j-(F=(v=e*j)-(v-j)))-((B=x*j)-w*F-A*F-w*O))),l[0]=z-(P+_)+(_-C),_=(k=q-((g=q+P)-(_=g-q))+(P-_))-(P=k-B),l[1]=k-(P+_)+(_-B),_=(D=g+P)-g,l[2]=g-(D-_)+(P-_),l[3]=D;const Q=r(N,a,4,l,d);return d[Q-1]}(t,o,p,b,y,h,m)},t.orient2dfast=function(t,e,n,r,o,f){return(e-f)*(n-o)-(t-o)*(r-f)},Object.defineProperty(t,"__esModule",{value:!0})}("object"==typeof exports&&void 0!==module?exports:(t=t||self).predicates={})},{}],91:[function(require,module,exports){var global,factory;global=this,factory=function(){"use strict";var TinyQueue=function(data,compare){if(void 0===data&&(data=[]),void 0===compare&&(compare=defaultCompare),this.data=data,this.length=this.data.length,this.compare=compare,this.length>0)for(var i=(this.length>>1)-1;i>=0;i--)this._down(i)};function defaultCompare(a,b){return a<b?-1:a>b?1:0}return TinyQueue.prototype.push=function(item){this.data.push(item),this.length++,this._up(this.length-1)},TinyQueue.prototype.pop=function(){if(0!==this.length){var top=this.data[0],bottom=this.data.pop();return this.length--,this.length>0&&(this.data[0]=bottom,this._down(0)),top}},TinyQueue.prototype.peek=function(){return this.data[0]},TinyQueue.prototype._up=function(pos){for(var data=this.data,compare=this.compare,item=data[pos];pos>0;){var parent=pos-1>>1,current=data[parent];if(compare(item,current)>=0)break;data[pos]=current,pos=parent}data[pos]=item},TinyQueue.prototype._down=function(pos){for(var data=this.data,compare=this.compare,halfLength=this.length>>1,item=data[pos];pos<halfLength;){var left=1+(pos<<1),best=data[left],right=left+1;if(right<this.length&&compare(data[right],best)<0&&(left=right,best=data[right]),compare(best,item)>=0)break;data[pos]=best,pos=left}data[pos]=item},TinyQueue},"object"==typeof exports&&void 0!==module?module.exports=factory():(global=global||self).TinyQueue=factory()},{}],92:[function(require,module,exports){module.exports={meta:require("@turf/meta"),helpers:require("@turf/helpers"),lineToPolygon:require("@turf/line-to-polygon"),polygonToLine:require("@turf/polygon-to-line"),booleanPointInPolygon:require("@turf/boolean-point-in-polygon"),invariant:require("@turf/invariant"),area:require("@turf/area"),bbox:require("@turf/bbox"),random:require("@turf/random"),polygonTangents:require("@turf/polygon-tangents"),union:require("@turf/union"),lineIntersect:require("@turf/line-intersect"),circle:require("@turf/circle"),sector:require("@turf/sector"),booleanContains:require("@turf/boolean-contains"),booleanOverlap:require("@turf/boolean-overlap"),transformScale:require("@turf/transform-scale"),convex:require("@turf/convex"),distance:require("@turf/distance"),length:require("@turf/length")}},{"@turf/area":1,"@turf/bbox":2,"@turf/boolean-contains":4,"@turf/boolean-overlap":5,"@turf/boolean-point-in-polygon":6,"@turf/circle":15,"@turf/convex":20,"@turf/distance":22,"@turf/helpers":23,"@turf/invariant":24,"@turf/length":25,"@turf/line-intersect":30,"@turf/line-to-polygon":33,"@turf/meta":34,"@turf/polygon-tangents":36,"@turf/polygon-to-line":39,"@turf/random":40,"@turf/sector":50,"@turf/transform-scale":54,"@turf/union":59}]},{},[92])(92)});
